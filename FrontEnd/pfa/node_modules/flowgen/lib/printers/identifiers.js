"use strict";

exports.__esModule = true;
exports.print = void 0;

var _index = _interopRequireDefault(require("./index"));

var _options = require("../options");

var _env = require("../env");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Please add only built-in type references
const identifiers = Object.create(null);
Object.assign(identifiers, {
  ReadonlyArray: "$ReadOnlyArray",
  ReadonlySet: "$ReadOnlySet",
  ReadonlyMap: "$ReadOnlyMap",
  Readonly: "$ReadOnly",
  NonNullable: "$NonMaybeType",
  Partial: ([type]) => {
    const isInexact = (0, _options.opts)().inexact;
    return `$Rest<${_index.default.node.printType(type)}, {${isInexact ? "..." : ""}}>`;
  },
  ReturnType: typeArguments => {
    return `$Call<<R>((...args: any[]) => R) => R, ${_index.default.node.printType(typeArguments[0])}>`;
  },
  Record: ([key, value]) => {
    const isInexact = (0, _options.opts)().inexact;
    return `{[key: ${_index.default.node.printType(key)}]: ${_index.default.node.printType(value)}${isInexact ? ", ..." : ""}}`;
  }
});
const print = (0, _env.withEnv)((env, kind) => {
  if (env.classHeritage) return kind;
  return identifiers[kind] || kind;
});
exports.print = print;