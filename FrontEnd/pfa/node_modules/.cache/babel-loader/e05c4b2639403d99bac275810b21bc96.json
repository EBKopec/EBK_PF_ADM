{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Portal\\\\PF\\\\EBK_PF_Adm\\\\FrontEnd\\\\pfa\\\\src\\\\components\\\\pages\\\\body\\\\mainFunction\\\\mainFunction.js\";\nimport React, { Component } from \"react\";\nimport Menu from \"../../menu/menu\";\nimport Select from 'react-select';\nimport api from \"../../../services/api\"; // import ShowBilling from \"./showBilling\";\n\nimport { checkArray } from '../../../utils/checkArray';\nimport \"./styles.css\";\nexport default class MainFunction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      const {\n        selectedYear,\n        selectedMonth\n      } = this.state;\n\n      try {\n        checkArray((await api.get(`/pmpg/${selectedYear.value}${selectedMonth.value}`)));\n      } catch (err) {\n        console.log('Erro', err);\n        return alert(`Algo está errado, acredito que está faltando alguma informação!`);\n      }\n\n      this.setState({\n        selectedYear: null,\n        selectedMonth: null\n      });\n      return alert(`Processo de faturamento para o período ${selectedYear.value} de ${selectedMonth.label}, concluído com sucesso!`);\n    };\n\n    this.loadYearMonth = async () => {\n      let ano = [];\n      let mes = []; // const { selectedYear, year } = this.state;\n\n      const resp_Y = await api.get(`/ano`);\n      const resp_M = await api.get(`/mes`);\n      ano = resp_Y.data.map(id_ano => {\n        return {\n          value: id_ano.id_ano,\n          label: id_ano.id_ano\n        };\n      });\n      mes = resp_M.data.map(id_mes => {\n        return {\n          value: id_mes.id_mes,\n          label: id_mes.mes\n        };\n      }); // console.log(\"Years\", ano);\n\n      this.setState({\n        year: ano,\n        month: mes\n      });\n    };\n\n    this.yearChange = selectedYear => {\n      this.setState({\n        selectedYear\n      });\n      console.log(`Year Selected: `, selectedYear.value);\n    };\n\n    this.monthChange = selectedMonth => {\n      this.setState({\n        selectedMonth\n      });\n      console.log(`Month Selected: `, selectedMonth.value);\n    };\n\n    this.state = {\n      year: null,\n      month: null,\n      selectedYear: null,\n      selectedMonth: null\n    };\n  }\n\n  async componentDidMount() {\n    // console.log(this.state)\n    this.loadYearMonth(); // let ano = [];\n    // let mes = [];\n    // // const { selectedYear, year } = this.state;\n    // const resp_Y = await api.get(`/ano`);\n    // const resp_M = await api.get(`/mes`);\n    // ano = resp_Y.data.map((id_ano) => {return {value: id_ano.id_ano, label:id_ano.id_ano }});\n    // mes = resp_M.data.map((id_mes) => {return {value: id_mes.id_mes, label:id_mes.mes}});\n    // // console.log(\"Years\", ano);\n    // this.setState({ year: ano, month: mes });\n  }\n\n  render() {\n    const {\n      selectedYear,\n      selectedMonth,\n      year,\n      month\n    } = this.state; // console.log(\"props\", ShowBilling)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Executar/Pesquisar Faturamento\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"finders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedYear,\n      onChange: this.yearChange,\n      options: year,\n      placeholder: \"Selecione o Ano\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedMonth,\n      onChange: this.monthChange,\n      options: month,\n      placeholder: \"Selecione o M\\xEAs\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"findButton\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Executar Faturamento\")));\n  }\n\n}","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/src/components/pages/body/mainFunction/mainFunction.js"],"names":["React","Component","Menu","Select","api","checkArray","MainFunction","constructor","props","handleSubmit","e","selectedYear","selectedMonth","state","get","value","err","console","log","alert","setState","label","loadYearMonth","ano","mes","resp_Y","resp_M","data","map","id_ano","id_mes","year","month","yearChange","monthChange","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Menu from \"../../menu/menu\";\r\nimport Select from 'react-select';\r\nimport api from \"../../../services/api\";\r\n// import ShowBilling from \"./showBilling\";\r\nimport { checkArray }  from '../../../utils/checkArray';\r\nimport \"./styles.css\";\r\n\r\n\r\n\r\nexport default class MainFunction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            year: null,\r\n            month: null,\r\n            selectedYear: null,\r\n            selectedMonth: null,\r\n        }\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        const { selectedYear, selectedMonth } = this.state;\r\n        try {\r\n            checkArray(await api.get(`/pmpg/${selectedYear.value}${selectedMonth.value}`));\r\n        } catch(err){\r\n            console.log('Erro', err);\r\n            return alert(`Algo está errado, acredito que está faltando alguma informação!`);\r\n        }\r\n        \r\n        this.setState({selectedYear: null, selectedMonth: null });\r\n        return alert(`Processo de faturamento para o período ${selectedYear.value} de ${selectedMonth.label}, concluído com sucesso!`);\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        // console.log(this.state)\r\n        this.loadYearMonth();\r\n        // let ano = [];\r\n        // let mes = [];\r\n        // // const { selectedYear, year } = this.state;\r\n        // const resp_Y = await api.get(`/ano`);\r\n        // const resp_M = await api.get(`/mes`);\r\n        // ano = resp_Y.data.map((id_ano) => {return {value: id_ano.id_ano, label:id_ano.id_ano }});\r\n        // mes = resp_M.data.map((id_mes) => {return {value: id_mes.id_mes, label:id_mes.mes}});\r\n        // // console.log(\"Years\", ano);\r\n        // this.setState({ year: ano, month: mes });\r\n    }\r\n\r\n    loadYearMonth = async () => {\r\n        let ano = [];\r\n        let mes = [];\r\n        // const { selectedYear, year } = this.state;\r\n        const resp_Y = await api.get(`/ano`);\r\n        const resp_M = await api.get(`/mes`);\r\n        ano = resp_Y.data.map((id_ano) => { return { value: id_ano.id_ano, label: id_ano.id_ano } });\r\n        mes = resp_M.data.map((id_mes) => { return { value: id_mes.id_mes, label: id_mes.mes } });\r\n        // console.log(\"Years\", ano);\r\n        this.setState({ year: ano, month: mes });\r\n    }\r\n\r\n    yearChange = selectedYear => {\r\n        this.setState({ selectedYear });\r\n        console.log(`Year Selected: `, selectedYear.value);\r\n    };\r\n    monthChange = selectedMonth => {\r\n        this.setState({ selectedMonth });\r\n        console.log(`Month Selected: `, selectedMonth.value);\r\n    };\r\n\r\n    render() {\r\n        const { selectedYear, selectedMonth, year, month } = this.state;\r\n        // console.log(\"props\", ShowBilling)\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"menu\">\r\n                    <Menu />\r\n                </div>\r\n                <h1>Executar/Pesquisar Faturamento</h1>\r\n                <div className=\"finders\">\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedYear}\r\n                        onChange={this.yearChange}\r\n                        options={year}\r\n                        placeholder=\"Selecione o Ano\"\r\n                        isSearchable />\r\n\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedMonth}\r\n                        onChange={this.monthChange}\r\n                        options={month}\r\n                        placeholder=\"Selecione o Mês\"\r\n                        isSearchable />\r\n                    <button className=\"findButton\" onClick={this.handleSubmit}>Executar Faturamento</button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}