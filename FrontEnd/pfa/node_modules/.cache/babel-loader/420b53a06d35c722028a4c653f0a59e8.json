{"ast":null,"code":"/**\r\n * Save file in browser\r\n *\r\n * @module save-file/browser\r\n */\n'use strict';\n\nvar saveAs = require('file-saver').saveAs;\n\nvar toBlob = require('./src/to-blob');\n\nvar planned = null;\nmodule.exports = save;\nmodule.exports.save = save;\nmodule.exports.saveSync = saveSync;\n\nfunction save(data, filename) {\n  // swap data/filename\n  if (typeof data === 'string') {\n    // writing string to string - take the lengthier\n    if (typeof filename !== 'string' || filename.length > data.length) {\n      var x = filename;\n      filename = data;\n      data = x;\n    }\n  }\n\n  var blob = toBlob(data, filename);\n\n  if (planned) {\n    return planned.then(function () {\n      planned = save(data, filename);\n      return planned;\n    });\n  } else {\n    planned = new Promise(function (ok, nok) {\n      saveAs(blob, filename); //prompt next dialog only when window got focus back\n\n      window.addEventListener('focus', function resolve() {\n        planned = null;\n        window.removeEventListener('focus', resolve);\n        ok();\n      });\n    });\n    return planned;\n  }\n}\n\nfunction saveSync(data, filename) {\n  return saveAs(toBlob(data, filename), filename);\n}","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/node_modules/save-file/browser.js"],"names":["saveAs","require","toBlob","planned","module","exports","save","saveSync","data","filename","length","x","blob","then","Promise","ok","nok","window","addEventListener","resolve","removeEventListener"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,MAAnC;;AACA,IAAIE,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAIE,OAAO,GAAG,IAAd;AAEAC,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAF,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsBA,IAAtB;AACAF,MAAM,CAACC,OAAP,CAAeE,QAAf,GAA0BA,QAA1B;;AAEA,SAASD,IAAT,CAAeE,IAAf,EAAqBC,QAArB,EAA+B;AAC9B;AACA,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC7B;AACA,QAAI,OAAOC,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACC,MAAT,GAAkBF,IAAI,CAACE,MAA3D,EAAmE;AAClE,UAAIC,CAAC,GAAGF,QAAR;AACAA,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAGG,CAAP;AACA;AACD;;AAED,MAAIC,IAAI,GAAGV,MAAM,CAACM,IAAD,EAAOC,QAAP,CAAjB;;AAEA,MAAIN,OAAJ,EAAa;AACZ,WAAOA,OAAO,CAACU,IAAR,CAAa,YAAY;AAC/BV,MAAAA,OAAO,GAAGG,IAAI,CAACE,IAAD,EAAOC,QAAP,CAAd;AACA,aAAON,OAAP;AACA,KAHM,CAAP;AAIA,GALD,MAMK;AACJA,IAAAA,OAAO,GAAG,IAAIW,OAAJ,CAAY,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AAExChB,MAAAA,MAAM,CAACY,IAAD,EAAOH,QAAP,CAAN,CAFwC,CAIxC;;AACAQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,SAASC,OAAT,GAAmB;AACnDhB,QAAAA,OAAO,GAAG,IAAV;AACAc,QAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCD,OAApC;AACAJ,QAAAA,EAAE;AACF,OAJD;AAKA,KAVS,CAAV;AAYA,WAAOZ,OAAP;AACA;AACD;;AAED,SAASI,QAAT,CAAmBC,IAAnB,EAAyBC,QAAzB,EAAmC;AAClC,SAAOT,MAAM,CAACE,MAAM,CAACM,IAAD,EAAOC,QAAP,CAAP,EAAyBA,QAAzB,CAAb;AACA","sourcesContent":["/**\r\n * Save file in browser\r\n *\r\n * @module save-file/browser\r\n */\r\n'use strict'\r\n\r\nvar saveAs = require('file-saver').saveAs\r\nvar toBlob = require('./src/to-blob')\r\n\r\nvar planned = null\r\n\r\nmodule.exports = save\r\nmodule.exports.save = save\r\nmodule.exports.saveSync = saveSync\r\n\r\nfunction save (data, filename) {\r\n\t// swap data/filename\r\n\tif (typeof data === 'string') {\r\n\t\t// writing string to string - take the lengthier\r\n\t\tif (typeof filename !== 'string' || filename.length > data.length) {\r\n\t\t\tvar x = filename\r\n\t\t\tfilename = data\r\n\t\t\tdata = x\r\n\t\t}\r\n\t}\r\n\r\n\tvar blob = toBlob(data, filename)\r\n\r\n\tif (planned) {\r\n\t\treturn planned.then(function () {\r\n\t\t\tplanned = save(data, filename)\r\n\t\t\treturn planned\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tplanned = new Promise(function (ok, nok) {\r\n\r\n\t\t\tsaveAs(blob, filename)\r\n\r\n\t\t\t//prompt next dialog only when window got focus back\r\n\t\t\twindow.addEventListener('focus', function resolve() {\r\n\t\t\t\tplanned = null\r\n\t\t\t\twindow.removeEventListener('focus', resolve)\r\n\t\t\t\tok()\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\treturn planned\r\n\t}\r\n}\r\n\r\nfunction saveSync (data, filename) {\r\n\treturn saveAs(toBlob(data, filename), filename)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}