{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Portal\\\\PF\\\\EBK_PF_Adm\\\\FrontEnd\\\\pfa\\\\src\\\\components\\\\pages\\\\body\\\\searchExt\\\\searchExts.js\";\nimport React, { Component } from \"react\";\nimport Select from 'react-select';\nimport Menu from \"../../menu/menu\";\nimport Table from '../../../utils/table/table';\nimport Data from \"../../../services/api\";\nconst columns = \"linha.Grupo.ATIVADOS_MES.DESCONECTADOS.EM_ATIVACAO\";\nconst heads = [\"LINHA\", \"GRUPO\", \"DATA ATIVAÇÃO\", \"DATA DESCONEXÃO\", \"DATA CADASTRO EM ATIVAÇÃO\"];\nexport default class SearchExts extends Component {\n  constructor() {\n    super();\n\n    this.loadContent = async (page = 1) => {\n      const {\n        selectedYear,\n        selectedMonth\n      } = this.state;\n\n      try {\n        const YM = (this.state.selectedYear.value && this.state.selectedMonth.value) === undefined ? `${selectedYear}${selectedMonth}` : `${this.state.selectedYear.value}${this.state.selectedMonth.value}`;\n        const data = await Data.get(`/extensions/desc/${YM}/${page}`);\n        const {\n          docs,\n          ...contentInfo\n        } = data.data;\n        this.setState({\n          content: docs,\n          contentInfo,\n          page,\n          route\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.loadYearMonth = async () => {\n      let ano = [];\n      let mes = []; // const { selectedYear, year } = this.state;\n\n      const resp_Y = await Data.get(`/ano`);\n      const resp_M = await Data.get(`/mes`);\n      ano = resp_Y.data.map(id_ano => {\n        return {\n          value: id_ano.id_ano,\n          label: id_ano.id_ano\n        };\n      });\n      mes = resp_M.data.map(id_mes => {\n        return {\n          value: id_mes.id_mes,\n          label: id_mes.mes\n        };\n      }); // console.log(\"Years\", ano);\n\n      this.setState({\n        year: ano,\n        month: mes\n      });\n    };\n\n    this.handleSubmit = async () => {\n      const {\n        selectedYear,\n        selectedMonth,\n        page\n      } = this.state;\n\n      try {\n        const YM = (this.state.selectedYear.value && this.state.selectedMonth.value) === undefined ? `${selectedYear}${selectedMonth}` : `${this.state.selectedYear.value}${this.state.selectedMonth.value}`;\n        const response = await Data.get(`/extensions/desc/${YM}/${page}`);\n        console.log(response);\n        const {\n          docs,\n          ...contentInfo\n        } = response.data;\n        console.log(\"Data\", docs);\n        this.setState({\n          content: docs,\n          pages: contentInfo.Pages.Pages,\n          page\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.showExts = () => {\n      const {\n        content,\n        page,\n        pages\n      } = this.state;\n      console.log('Content', content);\n      const showExts = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"groups\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        Header: heads,\n        data: content,\n        columns: columns,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page <= 1,\n        onClick: this.firstPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, \"Primeira P\\xE1gina\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page <= 1,\n        onClick: this.prevPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, \"Anterior\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, \"P\\xE1gina \", page, \" de \", pages), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Insira a P\\xE1gina\",\n        name: \"page\",\n        ref: \"newPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.findPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, \"Buscar\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page >= pages,\n        onClick: this.nextPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"Pr\\xF3ximo\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page >= pages,\n        onClick: this.lastPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"\\xDAltima P\\xE1gina\")));\n      return showExts;\n    };\n\n    this.yearChange = selectedYear => {\n      this.setState({\n        selectedYear\n      });\n      console.log(`Year Selected: `, selectedYear.value);\n    };\n\n    this.monthChange = selectedMonth => {\n      this.setState({\n        selectedMonth\n      });\n      console.log(`Month Selected: `, selectedMonth.value);\n    };\n\n    this.prevPage = () => {\n      const {\n        page\n      } = this.state; //contentInfo\n\n      if (page <= 1) return;\n      const pageNumber = page - 1; // console.log(`Current Page: ${page}, Previous Page ${pageNumber}`)\n\n      this.loadContent(pageNumber);\n    };\n\n    this.nextPage = () => {\n      const {\n        page,\n        pages\n      } = this.state;\n      if (page >= pages) return;\n      const pageNumber = page + 1; // console.log(`Current Page: ${page}, Next Page: ${pageNumber}`);\n\n      this.loadContent(pageNumber);\n    };\n\n    this.firstPage = () => {\n      const {\n        page\n      } = this.state;\n      if (page <= 1) return;\n      const pageNumber = 1;\n      this.loadContent(pageNumber);\n    };\n\n    this.lastPage = () => {\n      const {\n        page,\n        pages\n      } = this.state; // console.log('Last Page:', pages);\n\n      if (page >= pages) return;\n      this.loadContent(pages);\n    };\n\n    this.findPage = () => {\n      const {\n        contentInfo\n      } = this.state;\n\n      if (this.refs.newPage.value < 1 || this.refs.newPage.value > contentInfo.Pages.Pages) {\n        alert('A página solicitada não existe. Favor corrigir sua busca.');\n        return;\n      }\n\n      const page = this.refs.newPage.value;\n      this.loadContent(parseInt(page));\n    };\n\n    this.loadYearMonth = async () => {\n      let ano = [];\n      let mes = []; // const { selectedYear, year } = this.state;\n\n      const resp_Y = await Data.get(`/ano`);\n      const resp_M = await Data.get(`/mes`);\n      ano = resp_Y.data.map(id_ano => {\n        return {\n          value: id_ano.id_ano,\n          label: id_ano.id_ano\n        };\n      });\n      mes = resp_M.data.map(id_mes => {\n        return {\n          value: id_mes.id_mes,\n          label: id_mes.mes\n        };\n      }); // console.log(\"Years\", ano);\n\n      this.setState({\n        year: ano,\n        month: mes\n      });\n    };\n\n    this.state = {\n      content: [],\n      contentInfo: {},\n      page: 1,\n      pages: 1,\n      year: null,\n      month: null,\n      selectedYear: new Date().getFullYear(),\n      selectedMonth: parseInt(new Date().getMonth()) + 1\n    };\n  }\n\n  componentDidMount() {\n    this.loadContent();\n    this.loadYearMonth();\n  }\n\n  render() {\n    const {\n      selectedYear,\n      selectedMonth,\n      year,\n      month\n    } = this.state; // console.log(\"Content\", content);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \"Mostrar Ramais\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"finders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedYear,\n      onChange: this.yearChange,\n      options: year,\n      placeholder: \"Selecione o Ano\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedMonth,\n      onChange: this.monthChange,\n      options: month,\n      placeholder: \"Selecione o M\\xEAs\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"findButton\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"Pesquisar\")), this.showExts());\n  }\n\n}","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/src/components/pages/body/searchExt/searchExts.js"],"names":["React","Component","Select","Menu","Table","Data","columns","heads","SearchExts","constructor","loadContent","page","selectedYear","selectedMonth","state","YM","value","undefined","data","get","docs","contentInfo","setState","content","route","error","console","log","loadYearMonth","ano","mes","resp_Y","resp_M","map","id_ano","label","id_mes","year","month","handleSubmit","response","pages","Pages","showExts","firstPage","prevPage","findPage","nextPage","lastPage","yearChange","monthChange","pageNumber","refs","newPage","alert","parseInt","Date","getFullYear","getMonth","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,MAAMC,OAAO,GAAG,oDAAhB;AACA,MAAMC,KAAK,GAAG,CACV,OADU,EAEV,OAFU,EAGV,eAHU,EAIV,iBAJU,EAKV,2BALU,CAAd;AAQA,eAAe,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAC9CQ,EAAAA,WAAW,GAAG;AACV;;AADU,SAkBdC,WAlBc,GAkBA,OAAOC,IAAI,GAAG,CAAd,KAAoB;AAC9B,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAAkC,KAAKC,KAA7C;;AACA,UAAI;AACA,cAAMC,EAAE,GAAG,CAAC,KAAKD,KAAL,CAAWF,YAAX,CAAwBI,KAAxB,IAAiC,KAAKF,KAAL,CAAWD,aAAX,CAAyBG,KAA3D,MAAsEC,SAAtE,GAAmF,GAAEL,YAAa,GAAEC,aAAc,EAAlH,GAAuH,GAAE,KAAKC,KAAL,CAAWF,YAAX,CAAwBI,KAAM,GAAE,KAAKF,KAAL,CAAWD,aAAX,CAAyBG,KAAM,EAAnM;AACA,cAAME,IAAI,GAAG,MAAMb,IAAI,CAACc,GAAL,CAAU,oBAAmBJ,EAAG,IAAGJ,IAAK,EAAxC,CAAnB;AACA,cAAM;AAAES,UAAAA,IAAF;AAAQ,aAAGC;AAAX,YAA2BH,IAAI,CAACA,IAAtC;AACA,aAAKI,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEH,IAAX;AAAiBC,UAAAA,WAAjB;AAA8BV,UAAAA,IAA9B;AAAoCa,UAAAA;AAApC,SAAd;AACH,OALD,CAKE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KA5Ba;;AAAA,SA8BdG,aA9Bc,GA8BE,YAAY;AACxB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,GAAG,GAAG,EAAV,CAFwB,CAGxB;;AACA,YAAMC,MAAM,GAAG,MAAM1B,IAAI,CAACc,GAAL,CAAU,MAAV,CAArB;AACA,YAAMa,MAAM,GAAG,MAAM3B,IAAI,CAACc,GAAL,CAAU,MAAV,CAArB;AACAU,MAAAA,GAAG,GAAGE,MAAM,CAACb,IAAP,CAAYe,GAAZ,CAAiBC,MAAD,IAAY;AAAE,eAAO;AAAElB,UAAAA,KAAK,EAAEkB,MAAM,CAACA,MAAhB;AAAwBC,UAAAA,KAAK,EAAED,MAAM,CAACA;AAAtC,SAAP;AAAuD,OAArF,CAAN;AACAJ,MAAAA,GAAG,GAAGE,MAAM,CAACd,IAAP,CAAYe,GAAZ,CAAiBG,MAAD,IAAY;AAAE,eAAO;AAAEpB,UAAAA,KAAK,EAAEoB,MAAM,CAACA,MAAhB;AAAwBD,UAAAA,KAAK,EAAEC,MAAM,CAACN;AAAtC,SAAP;AAAoD,OAAlF,CAAN,CAPwB,CAQxB;;AACA,WAAKR,QAAL,CAAc;AAAEe,QAAAA,IAAI,EAAER,GAAR;AAAaS,QAAAA,KAAK,EAAER;AAApB,OAAd;AACH,KAxCa;;AAAA,SA0CdS,YA1Cc,GA0CC,YAAY;AACvB,YAAM;AAAE3B,QAAAA,YAAF;AAAgBC,QAAAA,aAAhB;AAA+BF,QAAAA;AAA/B,UAAuC,KAAKG,KAAlD;;AACA,UAAI;AACA,cAAMC,EAAE,GAAG,CAAC,KAAKD,KAAL,CAAWF,YAAX,CAAwBI,KAAxB,IAAiC,KAAKF,KAAL,CAAWD,aAAX,CAAyBG,KAA3D,MAAsEC,SAAtE,GAAmF,GAAEL,YAAa,GAAEC,aAAc,EAAlH,GAAuH,GAAE,KAAKC,KAAL,CAAWF,YAAX,CAAwBI,KAAM,GAAE,KAAKF,KAAL,CAAWD,aAAX,CAAyBG,KAAM,EAAnM;AACA,cAAMwB,QAAQ,GAAG,MAAMnC,IAAI,CAACc,GAAL,CAAU,oBAAmBJ,EAAG,IAAGJ,IAAK,EAAxC,CAAvB;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;AACA,cAAM;AAAEpB,UAAAA,IAAF;AAAQ,aAAGC;AAAX,YAA2BmB,QAAQ,CAACtB,IAA1C;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBP,IAAnB;AACA,aAAKE,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEH,IAAX;AAAiBqB,UAAAA,KAAK,EAAEpB,WAAW,CAACqB,KAAZ,CAAkBA,KAA1C;AAAiD/B,UAAAA;AAAjD,SAAd;AACH,OAPD,CAOE,OAAOc,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAtDa;;AAAA,SAwDdkB,QAxDc,GAwDH,MAAM;AACb,YAAM;AAAEpB,QAAAA,OAAF;AAAWZ,QAAAA,IAAX;AAAiB8B,QAAAA;AAAjB,UAA2B,KAAK3B,KAAtC;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB;AACA,YAAMoB,QAAQ,gBACV;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEpC,KAAf;AAAsB,QAAA,IAAI,EAAEgB,OAA5B;AAAqC,QAAA,OAAO,EAAEjB,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAII;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,QAAQ,EAAEK,IAAI,IAAI,CAA1B;AAA6B,QAAA,OAAO,EAAE,KAAKiC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAQ,QAAA,QAAQ,EAAEjC,IAAI,IAAI,CAA1B;AAA6B,QAAA,OAAO,EAAE,KAAKkC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,QAAA,QAAQ,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgClC,IAAhC,UAA0C8B,KAA1C,CAHJ,eAII;AAAO,QAAA,WAAW,EAAC,oBAAnB;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAiD,QAAA,GAAG,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKK,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAQ,QAAA,QAAQ,EAAEnC,IAAI,IAAI8B,KAA1B;AAAiC,QAAA,OAAO,EAAE,KAAKM,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAQ,QAAA,QAAQ,EAAEpC,IAAI,IAAI8B,KAA1B;AAAiC,QAAA,OAAO,EAAE,KAAKO,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAPJ,CAJJ,CADJ;AAgBA,aAAOL,QAAP;AACH,KA5Ea;;AAAA,SAgFdM,UAhFc,GAgFDrC,YAAY,IAAI;AACzB,WAAKU,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAb,EAA+Bf,YAAY,CAACI,KAA5C;AACH,KAnFa;;AAAA,SAqFdkC,WArFc,GAqFArC,aAAa,IAAI;AAC3B,WAAKS,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAb,EAAgCd,aAAa,CAACG,KAA9C;AACH,KAxFa;;AAAA,SA0Fd6B,QA1Fc,GA0FH,MAAM;AACb,YAAM;AAAElC,QAAAA;AAAF,UAAW,KAAKG,KAAtB,CADa,CAEb;;AACA,UAAIH,IAAI,IAAI,CAAZ,EAAe;AACf,YAAMwC,UAAU,GAAGxC,IAAI,GAAG,CAA1B,CAJa,CAKb;;AACA,WAAKD,WAAL,CAAiByC,UAAjB;AAEH,KAlGa;;AAAA,SAmGdJ,QAnGc,GAmGH,MAAM;AACb,YAAM;AAAEpC,QAAAA,IAAF;AAAQ8B,QAAAA;AAAR,UAAkB,KAAK3B,KAA7B;AACA,UAAIH,IAAI,IAAI8B,KAAZ,EAAmB;AACnB,YAAMU,UAAU,GAAGxC,IAAI,GAAG,CAA1B,CAHa,CAIb;;AACA,WAAKD,WAAL,CAAiByC,UAAjB;AACH,KAzGa;;AAAA,SA2GdP,SA3Gc,GA2GF,MAAM;AACd,YAAM;AAAEjC,QAAAA;AAAF,UAAW,KAAKG,KAAtB;AACA,UAAIH,IAAI,IAAI,CAAZ,EAAe;AACf,YAAMwC,UAAU,GAAG,CAAnB;AACA,WAAKzC,WAAL,CAAiByC,UAAjB;AACH,KAhHa;;AAAA,SAkHdH,QAlHc,GAkHH,MAAM;AACb,YAAM;AAAErC,QAAAA,IAAF;AAAQ8B,QAAAA;AAAR,UAAkB,KAAK3B,KAA7B,CADa,CAEb;;AACA,UAAIH,IAAI,IAAI8B,KAAZ,EAAmB;AACnB,WAAK/B,WAAL,CAAiB+B,KAAjB;AACH,KAvHa;;AAAA,SAyHdK,QAzHc,GAyHH,MAAM;AACb,YAAM;AAAEzB,QAAAA;AAAF,UAAkB,KAAKP,KAA7B;;AACA,UAAK,KAAKsC,IAAL,CAAUC,OAAV,CAAkBrC,KAAlB,GAA0B,CAA3B,IAAkC,KAAKoC,IAAL,CAAUC,OAAV,CAAkBrC,KAAlB,GAA0BK,WAAW,CAACqB,KAAZ,CAAkBA,KAAlF,EAA0F;AACtFY,QAAAA,KAAK,CAAC,2DAAD,CAAL;AACA;AACH;;AACD,YAAM3C,IAAI,GAAG,KAAKyC,IAAL,CAAUC,OAAV,CAAkBrC,KAA/B;AACA,WAAKN,WAAL,CAAiB6C,QAAQ,CAAC5C,IAAD,CAAzB;AACH,KAjIa;;AAAA,SAmIdiB,aAnIc,GAmIE,YAAY;AACxB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,GAAG,GAAG,EAAV,CAFwB,CAGxB;;AACA,YAAMC,MAAM,GAAG,MAAM1B,IAAI,CAACc,GAAL,CAAU,MAAV,CAArB;AACA,YAAMa,MAAM,GAAG,MAAM3B,IAAI,CAACc,GAAL,CAAU,MAAV,CAArB;AACAU,MAAAA,GAAG,GAAGE,MAAM,CAACb,IAAP,CAAYe,GAAZ,CAAiBC,MAAD,IAAY;AAAE,eAAO;AAAElB,UAAAA,KAAK,EAAEkB,MAAM,CAACA,MAAhB;AAAwBC,UAAAA,KAAK,EAAED,MAAM,CAACA;AAAtC,SAAP;AAAuD,OAArF,CAAN;AACAJ,MAAAA,GAAG,GAAGE,MAAM,CAACd,IAAP,CAAYe,GAAZ,CAAiBG,MAAD,IAAY;AAAE,eAAO;AAAEpB,UAAAA,KAAK,EAAEoB,MAAM,CAACA,MAAhB;AAAwBD,UAAAA,KAAK,EAAEC,MAAM,CAACN;AAAtC,SAAP;AAAoD,OAAlF,CAAN,CAPwB,CAQxB;;AACA,WAAKR,QAAL,CAAc;AAAEe,QAAAA,IAAI,EAAER,GAAR;AAAaS,QAAAA,KAAK,EAAER;AAApB,OAAd;AACH,KA7Ia;;AAEV,SAAKhB,KAAL,GAAa;AACTS,MAAAA,OAAO,EAAE,EADA;AAETF,MAAAA,WAAW,EAAE,EAFJ;AAGTV,MAAAA,IAAI,EAAE,CAHG;AAIT8B,MAAAA,KAAK,EAAE,CAJE;AAKTJ,MAAAA,IAAI,EAAE,IALG;AAMTC,MAAAA,KAAK,EAAE,IANE;AAOT1B,MAAAA,YAAY,EAAE,IAAI4C,IAAJ,GAAWC,WAAX,EAPL;AAQT5C,MAAAA,aAAa,EAAE0C,QAAQ,CAAC,IAAIC,IAAJ,GAAWE,QAAX,EAAD,CAAR,GAAkC;AARxC,KAAb;AAUH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKjD,WAAL;AACA,SAAKkB,aAAL;AACH;;AAgIDgC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhD,MAAAA,YAAF;AAAgBC,MAAAA,aAAhB;AAA+BwB,MAAAA,IAA/B;AAAqCC,MAAAA;AAArC,QAA+C,KAAKxB,KAA1D,CADK,CAEL;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,KAAK,EAAEF,YAFX;AAGI,MAAA,QAAQ,EAAE,KAAKqC,UAHnB;AAII,MAAA,OAAO,EAAEZ,IAJb;AAKI,MAAA,WAAW,EAAC,iBALhB;AAMI,MAAA,YAAY,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,KAAK,EAAExB,aAFX;AAGI,MAAA,QAAQ,EAAE,KAAKqC,WAHnB;AAII,MAAA,OAAO,EAAEZ,KAJb;AAKI,MAAA,WAAW,EAAC,oBALhB;AAMI,MAAA,YAAY,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAgBI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,KAAKC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBJ,CALJ,EAwBM,KAAKI,QAAL,EAxBN,CADJ;AA6BH;;AAjL6C","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from 'react-select';\r\nimport Menu from \"../../menu/menu\";\r\nimport Table from '../../../utils/table/table';\r\nimport Data from \"../../../services/api\";\r\n\r\nconst columns = \"linha.Grupo.ATIVADOS_MES.DESCONECTADOS.EM_ATIVACAO\";\r\nconst heads = [ \r\n    \"LINHA\",   \r\n    \"GRUPO\",\r\n    \"DATA ATIVAÇÃO\",\r\n    \"DATA DESCONEXÃO\",\r\n    \"DATA CADASTRO EM ATIVAÇÃO\"\r\n]\r\n\r\nexport default class SearchExts extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            content: [],\r\n            contentInfo: {},\r\n            page: 1,\r\n            pages: 1,\r\n            year: null,\r\n            month: null,\r\n            selectedYear: new Date().getFullYear(),\r\n            selectedMonth: parseInt(new Date().getMonth()) + 1\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadContent();\r\n        this.loadYearMonth();\r\n    }\r\n\r\n    loadContent = async (page = 1) => {\r\n        const { selectedYear, selectedMonth } = this.state\r\n        try {\r\n            const YM = (this.state.selectedYear.value && this.state.selectedMonth.value) === undefined ? `${selectedYear}${selectedMonth}` : `${this.state.selectedYear.value}${this.state.selectedMonth.value}`\r\n            const data = await Data.get(`/extensions/desc/${YM}/${page}`);\r\n            const { docs, ...contentInfo } = data.data\r\n            this.setState({ content: docs, contentInfo, page, route });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    loadYearMonth = async () => {\r\n        let ano = [];\r\n        let mes = [];\r\n        // const { selectedYear, year } = this.state;\r\n        const resp_Y = await Data.get(`/ano`);\r\n        const resp_M = await Data.get(`/mes`);\r\n        ano = resp_Y.data.map((id_ano) => { return { value: id_ano.id_ano, label: id_ano.id_ano } });\r\n        mes = resp_M.data.map((id_mes) => { return { value: id_mes.id_mes, label: id_mes.mes } });\r\n        // console.log(\"Years\", ano);\r\n        this.setState({ year: ano, month: mes });\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const { selectedYear, selectedMonth, page} = this.state\r\n        try {\r\n            const YM = (this.state.selectedYear.value && this.state.selectedMonth.value) === undefined ? `${selectedYear}${selectedMonth}` : `${this.state.selectedYear.value}${this.state.selectedMonth.value}`\r\n            const response = await Data.get(`/extensions/desc/${YM}/${page}`);\r\n            console.log(response)\r\n            const { docs, ...contentInfo } = response.data;\r\n            console.log(\"Data\",docs);\r\n            this.setState({ content: docs, pages: contentInfo.Pages.Pages, page  });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    showExts = () => {\r\n        const { content, page, pages } = this.state;\r\n        console.log('Content', content);\r\n        const showExts = (\r\n            <div className=\"groups\">\r\n                <div className=\"table\">\r\n                    <Table Header={heads} data={content} columns={columns} />\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <button disabled={page <= 1} onClick={this.firstPage}>Primeira Página</button>\r\n                    <button disabled={page <= 1} onClick={this.prevPage}>Anterior</button>\r\n                    <button disabled={true}>Página {page} de {pages}</button>\r\n                    <input placeholder=\"Insira a Página\" name=\"page\" ref=\"newPage\" />\r\n                    <button onClick={this.findPage}>Buscar</button>\r\n                    <button disabled={page >= pages} onClick={this.nextPage}>Próximo</button>\r\n                    <button disabled={page >= pages} onClick={this.lastPage}>Última Página</button>\r\n                </div>\r\n            </div>\r\n        )\r\n        return showExts;\r\n    }\r\n\r\n\r\n    // Year Selected\r\n    yearChange = selectedYear => {\r\n        this.setState({ selectedYear });\r\n        console.log(`Year Selected: `, selectedYear.value);\r\n    };\r\n    // Month Selected\r\n    monthChange = selectedMonth => {\r\n        this.setState({ selectedMonth });\r\n        console.log(`Month Selected: `, selectedMonth.value);\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { page } = this.state;\r\n        //contentInfo\r\n        if (page <= 1) return;\r\n        const pageNumber = page - 1;\r\n        // console.log(`Current Page: ${page}, Previous Page ${pageNumber}`)\r\n        this.loadContent(pageNumber);\r\n\r\n    };\r\n    nextPage = () => {\r\n        const { page, pages } = this.state;\r\n        if (page >= pages) return;\r\n        const pageNumber = page + 1;\r\n        // console.log(`Current Page: ${page}, Next Page: ${pageNumber}`);\r\n        this.loadContent(pageNumber);\r\n    };\r\n\r\n    firstPage = () => {\r\n        const { page } = this.state;\r\n        if (page <= 1) return;\r\n        const pageNumber = 1;\r\n        this.loadContent(pageNumber);\r\n    }\r\n\r\n    lastPage = () => {\r\n        const { page, pages } = this.state;\r\n        // console.log('Last Page:', pages);\r\n        if (page >= pages) return;\r\n        this.loadContent(pages);\r\n    };\r\n\r\n    findPage = () => {\r\n        const { contentInfo } = this.state;\r\n        if ((this.refs.newPage.value < 1) || (this.refs.newPage.value > contentInfo.Pages.Pages)) {\r\n            alert('A página solicitada não existe. Favor corrigir sua busca.');\r\n            return;\r\n        }\r\n        const page = this.refs.newPage.value;\r\n        this.loadContent(parseInt(page));\r\n    };\r\n\r\n    loadYearMonth = async () => {\r\n        let ano = [];\r\n        let mes = [];\r\n        // const { selectedYear, year } = this.state;\r\n        const resp_Y = await Data.get(`/ano`);\r\n        const resp_M = await Data.get(`/mes`);\r\n        ano = resp_Y.data.map((id_ano) => { return { value: id_ano.id_ano, label: id_ano.id_ano } });\r\n        mes = resp_M.data.map((id_mes) => { return { value: id_mes.id_mes, label: id_mes.mes } });\r\n        // console.log(\"Years\", ano);\r\n        this.setState({ year: ano, month: mes });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedYear, selectedMonth, year, month } = this.state;\r\n        // console.log(\"Content\", content);\r\n        return (\r\n            <div className=\"mainDiv\">\r\n                <div className=\"menu\">\r\n                    <Menu />\r\n                </div>\r\n                <h1>Mostrar Ramais</h1>\r\n                <div className=\"finders\">\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedYear}\r\n                        onChange={this.yearChange}\r\n                        options={year}\r\n                        placeholder=\"Selecione o Ano\"\r\n                        isSearchable />\r\n\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedMonth}\r\n                        onChange={this.monthChange}\r\n                        options={month}\r\n                        placeholder=\"Selecione o Mês\"\r\n                        isSearchable />\r\n                    <button className=\"findButton\" onClick={this.handleSubmit}>Pesquisar</button>\r\n                </div>\r\n\r\n                 {this.showExts()}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}