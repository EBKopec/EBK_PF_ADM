{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Portal\\\\PF\\\\EBK_PF_Adm\\\\FrontEnd\\\\pfa\\\\src\\\\components\\\\pages\\\\body\\\\register\\\\register.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Logo from \"../../../images/nova_logo.png\";\nimport { Form, Container } from \"./styles\";\nimport api from \"../../../services/api\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n\n    this.handleRegister = async e => {\n      e.preventDefault();\n      const {\n        username,\n        email,\n        password\n      } = this.state;\n\n      if (!username || !email || !password) {\n        this.setState({\n          error: \"Preencha todos os dados para se cadastrar!\"\n        });\n      } else {\n        try {\n          await api.post(\"/users/register\", {\n            username,\n            email,\n            password\n          });\n          this.props.history.push(\"/login\");\n        } catch (err) {\n          console.log(err);\n          this.setState({\n            error: \" Ocorreu um erro ao registrar sua conta. T.T\"\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"Nova Fibra logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), this.state.error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 42\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Nome do Usu\\xE1rio\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Endere\\xE7o de E-mail\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Senha\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Registrar Usu\\xE1rio\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Fazer Login\")));\n  }\n\n}\n\nexport default withRouter(Register);","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/src/components/pages/body/register/register.js"],"names":["React","Component","Link","withRouter","Logo","Form","Container","api","Register","state","username","email","password","error","handleRegister","e","preventDefault","setState","post","props","history","push","err","console","log","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../../images/nova_logo.png\";\r\n\r\nimport { Form, Container } from \"./styles\";\r\nimport api from \"../../../services/api\"\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        username : \"\",\r\n        email : \"\",\r\n        password : \"\",\r\n        error : \"\"\r\n    };\r\n\r\n    handleRegister = async e => {\r\n        e.preventDefault();\r\n        const { username, email, password } = this.state;\r\n        if ( !username || !email || !password ){\r\n            this.setState({ error: \"Preencha todos os dados para se cadastrar!\" });\r\n        } else {\r\n            try {\r\n                await api.post(\"/users/register\", { username, email, password });\r\n                this.props.history.push(\"/login\");\r\n            } catch (err) {\r\n                console.log(err);\r\n                this.setState({ error: \" Ocorreu um erro ao registrar sua conta. T.T\"});\r\n            }\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Form onSubmit={this.handleRegister}>\r\n                    <img src={Logo} alt=\"Nova Fibra logo\"/>\r\n                    {this.state.error && <p>{this.state.error}</p>}\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Nome do Usuário\"\r\n                        onChange={e => this.setState({ username: e.target.value })}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Endereço de E-mail\"\r\n                        onChange={e => this.setState({ email: e.target.value })}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Senha\"\r\n                        onChange={e => this.setState({ password: e.target.value })}\r\n                    />\r\n                    <button type=\"submit\">Registrar Usuário</button>\r\n                    <hr/>\r\n                    <Link to=\"/login\">Fazer Login</Link>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Register);"]},"metadata":{},"sourceType":"module"}