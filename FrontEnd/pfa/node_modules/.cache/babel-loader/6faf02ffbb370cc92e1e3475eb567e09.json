{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Portal\\\\PF\\\\EBK_PF_Adm\\\\FrontEnd\\\\pfa\\\\src\\\\components\\\\pages\\\\body\\\\mainFunction\\\\showConsumeTotal.js\";\nimport React, { Component } from \"react\";\nimport Menu from \"../../menu/menu\";\nimport Select from 'react-select';\nimport Data from \"../../../services/api\";\nimport Currency from 'react-currency-format';\nexport default class showConsumeTotal extends Component {\n  constructor() {\n    super();\n\n    this.loadYearMonth = async () => {\n      let ano = [];\n      let mes = []; // const { selectedYear, year } = this.state;\n\n      const resp_Y = await Data.get(`/ano`);\n      const resp_M = await Data.get(`/mes`);\n      ano = resp_Y.data.map(id_ano => {\n        return {\n          value: id_ano.id_ano,\n          label: id_ano.id_ano\n        };\n      });\n      mes = resp_M.data.map(id_mes => {\n        return {\n          value: id_mes.id_mes,\n          label: id_mes.mes\n        };\n      }); // console.log(\"Years\", ano);\n\n      this.setState({\n        year: ano,\n        month: mes\n      });\n    };\n\n    this.yearChange = selectedYear => {\n      this.setState({\n        selectedYear\n      }); // console.log(`Year Selected: `, selectedYear.value);\n    };\n\n    this.monthChange = selectedMonth => {\n      this.setState({\n        selectedMonth\n      }); // console.log(`Month Selected: `, selectedMonth.value);\n    };\n\n    this.handleSubmit = async e => {\n      const {\n        selectedYear,\n        selectedMonth\n      } = this.state;\n      const response = await Data.get(`/pmpg/total/${selectedYear.value}${selectedMonth.value}`);\n      const {\n        data\n      } = response;\n      console.log(\"Data\", data);\n      this.setState({\n        content: data\n      });\n      console.log(this.state.content);\n      this.total();\n    };\n\n    this.minutes = time => {\n      const part = String(time === 0 ? 0 : time).split('.');\n      const min = isNaN(part[0]) ? 0 : parseFloat(part[0]);\n      const sec = isNaN(part[1]) ? 0 : parseFloat(part[1]); // const total_minutes = parseInt(min) + Math.round(parseInt(sec) / 60 , 0)\n      // ((parseInt(min) * 60) + sec) / 60 \n      // ((parseInt(min) * 60) + sec ) * 0.016667\n\n      console.log(\"time\", sec / 60);\n      const total_sec = sec % 60 / 60; //0.016666478\n      // const total_min = (((((parseInt(min) * 60))) + sec ) / 60 )\n      // const total_time = Math.round(total_min,2) \n      // ((parseInt(min)) === 0 ? 0 : (parseInt(min))) + ((parseInt(sec) % 60)) === 0 ? 0 : ((parseInt(sec) % 60))\n      // const total_time = ((parseInt(min)) === 0 ? 0 : (parseInt(min))) + ((parseInt(sec) / 60) === 0 ? 0 : (parseInt(sec) / 60))\n\n      return total_sec;\n    };\n\n    this.mask = (Value, Decimal, Prefix, TS) => {\n      const valor = /*#__PURE__*/React.createElement(Currency, {\n        displayType: 'text',\n        value: Value,\n        thousandSeparator: TS,\n        decimalSeparator: Decimal,\n        prefix: Prefix,\n        decimalScale: 2,\n        fixedDecimalScale: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }\n      });\n      return valor;\n    };\n\n    this.total = () => {\n      const {\n        content\n      } = this.state;\n      const total_geral = content.map(ttl => ttl.total_faturar).reduce((tt, next) => tt + next);\n      const total_ext = content.map(ttl => ttl.total).reduce((tt, next) => tt + next);\n      const total_llm = content.map(ttl => ttl.local_valor + ttl.ldn_valor + ttl.movel_valor).reduce((tt, next) => tt + next);\n      const total_exc = content.map(ttl => ttl.local_exc + ttl.ldn_exc + ttl.movel_exc).reduce((tt, next) => tt + next);\n      const total_min = content.map(ttl => parseFloat(ttl.ldn_exc_m) //  ttl.local_exc_m\n      // + ttl.ldn_exc_m\n      // + ttl.movel_exc_m)\n      ).reduce((tt, next) => tt + next);\n      this.setState({\n        total: total_geral,\n        total_ext: total_ext,\n        total_llm: total_llm,\n        total_exc: total_exc,\n        total_min: total_min\n      });\n    };\n\n    this.state = {\n      year: null,\n      month: null,\n      selectedYear: new Date().getFullYear(),\n      selectedMonth: parseInt(new Date().getMonth()) + 1,\n      total: 0,\n      total_ext: 0,\n      total_llm: 0,\n      total_exc: 0,\n      total_min: 0,\n      content: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadYearMonth(); // this.total();\n  }\n\n  render() {\n    const {\n      selectedYear,\n      selectedMonth,\n      year,\n      month,\n      total,\n      total_ext,\n      total_llm,\n      total_exc,\n      total_min\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Pesquisar Faturamento - Consumo Total\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"finders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedYear,\n      onChange: this.yearChange,\n      options: year,\n      placeholder: \"Selecione o Ano\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedMonth,\n      onChange: this.monthChange,\n      options: month,\n      placeholder: \"Selecione o M\\xEAs\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"findButton\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \"Pesquisar\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"Total Geral\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"Total Servi\\xE7os:\", this.mask(total, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, \"Total Ramais: \", this.mask(total_ext, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"Total Franquias: \", this.mask(total_llm, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Total Excedentes: \", this.mask(total_exc, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, \"Total Minutos: \", this.mask(this.minutes(total_min), \":\", \" \")))));\n  }\n\n}","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/src/components/pages/body/mainFunction/showConsumeTotal.js"],"names":["React","Component","Menu","Select","Data","Currency","showConsumeTotal","constructor","loadYearMonth","ano","mes","resp_Y","get","resp_M","data","map","id_ano","value","label","id_mes","setState","year","month","yearChange","selectedYear","monthChange","selectedMonth","handleSubmit","e","state","response","console","log","content","total","minutes","time","part","String","split","min","isNaN","parseFloat","sec","total_sec","mask","Value","Decimal","Prefix","TS","valor","total_geral","ttl","total_faturar","reduce","tt","next","total_ext","total_llm","local_valor","ldn_valor","movel_valor","total_exc","local_exc","ldn_exc","movel_exc","total_min","ldn_exc_m","Date","getFullYear","parseInt","getMonth","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Menu from \"../../menu/menu\";\r\nimport Select from 'react-select';\r\nimport Data from \"../../../services/api\";\r\nimport Currency from 'react-currency-format';\r\n\r\n\r\nexport default class showConsumeTotal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            year: null,\r\n            month: null,\r\n            selectedYear: new Date().getFullYear(),\r\n            selectedMonth: parseInt(new Date().getMonth()) + 1,\r\n            total: 0,\r\n            total_ext: 0,\r\n            total_llm: 0,\r\n            total_exc: 0,\r\n            total_min: 0,\r\n            content: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadYearMonth();\r\n        // this.total();\r\n    }\r\n\r\n    loadYearMonth = async () => {\r\n        let ano = [];\r\n        let mes = [];\r\n        // const { selectedYear, year } = this.state;\r\n        const resp_Y = await Data.get(`/ano`);\r\n        const resp_M = await Data.get(`/mes`);\r\n        ano = resp_Y.data.map((id_ano) => { return { value: id_ano.id_ano, label: id_ano.id_ano } });\r\n        mes = resp_M.data.map((id_mes) => { return { value: id_mes.id_mes, label: id_mes.mes } });\r\n        // console.log(\"Years\", ano);\r\n        this.setState({ year: ano, month: mes });\r\n    }\r\n    // Year Selected\r\n    yearChange = selectedYear => {\r\n        this.setState({ selectedYear });\r\n        // console.log(`Year Selected: `, selectedYear.value);\r\n    };\r\n    // Month Selected\r\n    monthChange = selectedMonth => {\r\n        this.setState({ selectedMonth });\r\n        // console.log(`Month Selected: `, selectedMonth.value);\r\n    };\r\n\r\n    handleSubmit = async e => {\r\n        const { selectedYear, selectedMonth } = this.state;\r\n\r\n        const response = await Data.get(`/pmpg/total/${selectedYear.value}${selectedMonth.value}`);\r\n        const { data } = response;\r\n        console.log(\"Data\", data)\r\n        this.setState({ content: data });\r\n        console.log(this.state.content);\r\n        this.total()\r\n    }\r\n\r\n\r\n    minutes = (time) => {\r\n        \r\n        const part = (String(time === 0 ? 0 : time)).split('.')\r\n        const min = isNaN(part[0]) ? 0 : parseFloat(part[0]);\r\n        const sec = isNaN(part[1]) ? 0 : parseFloat(part[1]);\r\n        // const total_minutes = parseInt(min) + Math.round(parseInt(sec) / 60 , 0)\r\n        // ((parseInt(min) * 60) + sec) / 60 \r\n        // ((parseInt(min) * 60) + sec ) * 0.016667\r\n        console.log(\"time\", sec / 60)\r\n        const total_sec = sec % 60 / 60\r\n        //0.016666478\r\n        // const total_min = (((((parseInt(min) * 60))) + sec ) / 60 )\r\n        // const total_time = Math.round(total_min,2) \r\n\r\n        // ((parseInt(min)) === 0 ? 0 : (parseInt(min))) + ((parseInt(sec) % 60)) === 0 ? 0 : ((parseInt(sec) % 60))\r\n        // const total_time = ((parseInt(min)) === 0 ? 0 : (parseInt(min))) + ((parseInt(sec) / 60) === 0 ? 0 : (parseInt(sec) / 60))\r\n        return total_sec\r\n    }\r\n\r\n    mask = (Value, Decimal, Prefix, TS) => {\r\n        const valor = (<Currency displayType={'text'}\r\n            value={Value}\r\n            thousandSeparator={TS}\r\n            decimalSeparator={Decimal}\r\n            prefix={Prefix}\r\n            decimalScale={2}\r\n            fixedDecimalScale={true} />)\r\n        return valor\r\n    }\r\n\r\n    total = () => {\r\n        const { content } = this.state;\r\n        const total_geral = (content.map((ttl) => (ttl.total_faturar)).reduce((tt, next) => (tt + next)))\r\n        const total_ext = (content.map((ttl) => (ttl.total)).reduce((tt, next) => (tt + next)))\r\n        const total_llm = (content.map((ttl) => (ttl.local_valor\r\n            + ttl.ldn_valor\r\n            + ttl.movel_valor)).reduce((tt, next) => (tt + next)))\r\n        const total_exc = (content.map((ttl) => (ttl.local_exc\r\n            + ttl.ldn_exc\r\n            + ttl.movel_exc))).reduce((tt, next) => (tt + next))\r\n        const total_min = (content.map((ttl) => (parseFloat(ttl.ldn_exc_m)\r\n            //  ttl.local_exc_m\r\n            // + ttl.ldn_exc_m\r\n            // + ttl.movel_exc_m)\r\n        ))).reduce((tt, next) => (tt + next))\r\n        this.setState({\r\n            total: total_geral\r\n            , total_ext: total_ext\r\n            , total_llm: total_llm\r\n            , total_exc: total_exc\r\n            , total_min: total_min\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { selectedYear, selectedMonth, year, month, total, total_ext, total_llm, total_exc, total_min } = this.state;\r\n        return (\r\n            <div className=\"mainDiv\">\r\n                <div className=\"menu\">\r\n                    <Menu />\r\n                </div>\r\n                <h1>Pesquisar Faturamento - Consumo Total</h1>\r\n                <div className=\"finders\">\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedYear}\r\n                        onChange={this.yearChange}\r\n                        options={year}\r\n                        placeholder=\"Selecione o Ano\"\r\n                        isSearchable />\r\n\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedMonth}\r\n                        onChange={this.monthChange}\r\n                        options={month}\r\n                        placeholder=\"Selecione o Mês\"\r\n                        isSearchable />\r\n                    <button className=\"findButton\" onClick={this.handleSubmit}>Pesquisar</button>\r\n                </div>\r\n                <div>\r\n                    <div className=\"total\">\r\n                        <h1>Total Geral</h1>\r\n                        <p>Total Serviços:{this.mask(total, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Ramais: {this.mask(total_ext, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Franquias: {this.mask(total_llm, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Excedentes: {this.mask(total_exc, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Minutos: {this.mask(this.minutes(total_min), \":\", \" \")}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}