{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Portal\\\\PF\\\\EBK_PF_Adm\\\\FrontEnd\\\\pfa\\\\src\\\\components\\\\pages\\\\body\\\\login\\\\login.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Logo from \"../../../images/nova_logo.png\";\nimport api from \"../../../services/api\";\nimport { login, clear } from \"../../../services/auth\";\nimport { Form, Container } from \"./styles\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleLogin = async e => {\n      e.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n\n      if (!username || !password) {\n        alert(\"Preencha Usuário e Senha!\");\n      } else {\n        try {\n          const response = await api.post(\"/login\", {\n            username,\n            password\n          });\n          clear(response.data.token);\n          login(response.data.token);\n          this.props.history.push(\"/app\");\n        } catch (err) {\n          alert(\"Houve um problema, verifique se seus dados de acesso estão corretos!\");\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"Nova Fibra logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), \" \", this.state.error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    }, \" \", this.state.error, \" \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      autoComplete: \"username\",\n      placeholder: \"Usu\\xE1rio\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      autoComplete: \"password\",\n      placeholder: \"Password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \" Login \"), \" \", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 59\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/users/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \" Registrar Usu\\xE1rio \"), \" \"), \" \");\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/src/components/pages/body/login/login.js"],"names":["React","Component","Link","withRouter","Logo","api","login","clear","Form","Container","Login","state","username","password","handleLogin","e","preventDefault","alert","response","post","data","token","props","history","push","err","render","error","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,wBAA7B;AAEA,SAASC,IAAT,EAAeC,SAAf,QAAgC,UAAhC;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADkB;;AAAA,SAO1BC,WAP0B,GAOZ,MAAMC,CAAN,IAAW;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEJ,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyB,KAAKF,KAApC;;AACA,UAAI,CAACC,QAAD,IAAa,CAACC,QAAlB,EAA4B;AACxBI,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACH,OAFD,MAEO;AACH,YAAI;AACA,gBAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,IAAJ,CAAS,QAAT,EAAmB;AAAEP,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,WAAnB,CAAvB;AACAN,UAAAA,KAAK,CAACW,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAL;AACAf,UAAAA,KAAK,CAACY,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAL;AACA,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACH,SALD,CAKE,OAAOC,GAAP,EAAY;AACVR,UAAAA,KAAK,CAAC,sEAAD,CAAL;AACH;AACJ;AACJ,KAtByB;AAAA;;AAwB1BS,EAAAA,MAAM,GAAG;AACL,wBAAS,oBACL,SADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEL,oBACA,IADA;AACK,MAAA,QAAQ,EAAK,KAAKZ,WADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AACI,MAAA,GAAG,EAAKV,IADZ;AAEA,MAAA,GAAG,EAAG,iBAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,OAKI,KAAKO,KAAL,CAAWgB,KAAX,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ,KAAKhB,KAAL,CAAWgB,KAAnB,MALxB,oBAK0D;AAEtD,MAAA,IAAI,EAAG,UAF+C;AAGtD,MAAA,YAAY,EAAG,UAHuC;AAItD,MAAA,WAAW,EAAG,YAJwC;AAKtD,MAAA,QAAQ,EAAKZ,CAAC,IAAI,KAAKa,QAAL,CAAc;AAAEhB,QAAAA,QAAQ,EAAEG,CAAC,CAACc,MAAF,CAASC;AAArB,OAAd,CALoC;AAMtD,MAAA,QAAQ,MAN8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL1D,eAaI;AAEA,MAAA,IAAI,EAAG,UAFP;AAGA,MAAA,YAAY,EAAG,UAHf;AAIA,MAAA,WAAW,EAAG,UAJd;AAKA,MAAA,QAAQ,EAAKf,CAAC,IAAI,KAAKa,QAAL,CAAc;AAAEf,QAAAA,QAAQ,EAAEE,CAAC,CAACc,MAAF,CAASC;AAArB,OAAd,CALlB;AAMA,MAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,eAqBI;AACO,MAAA,IAAI,EAAG,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArBJ,oBAsB8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtB9C,eAwBI,oBACA,IADA;AACK,MAAA,EAAE,EAAG,iBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAxBJ,MAFK,MAAT;AA+BC;;AAxDqB;;AA0D1B,eAAe3B,UAAU,CAACO,KAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Logo from \"../../../images/nova_logo.png\";\r\nimport api from \"../../../services/api\";\r\nimport { login, clear } from \"../../../services/auth\";\r\n\r\nimport { Form, Container } from \"./styles\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n\r\n    handleLogin = async e => {\r\n        e.preventDefault();\r\n        const { username, password } = this.state;\r\n        if (!username || !password) {\r\n            alert(\"Preencha Usuário e Senha!\");\r\n        } else {\r\n            try {\r\n                const response = await api.post(\"/login\", { username, password });\r\n                clear(response.data.token);\r\n                login(response.data.token);\r\n                this.props.history.push(\"/app\");\r\n            } catch (err) {\r\n                alert(\"Houve um problema, verifique se seus dados de acesso estão corretos!\");\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return ( <\r\n            Container >\r\n            <\r\n            Form onSubmit = { this.handleLogin } >\r\n            <\r\n            img src = { Logo }\r\n            alt = \"Nova Fibra logo\" / > {\r\n                this.state.error && < p > { this.state.error } < /p>} <\r\n                input\r\n                type = \"username\"\r\n                autoComplete = \"username\"\r\n                placeholder = \"Usuário\"\r\n                onChange = { e => this.setState({ username: e.target.value }) }\r\n                required /\r\n                >\r\n                <\r\n                input\r\n                type = \"password\"\r\n                autoComplete = \"password\"\r\n                placeholder = \"Password\"\r\n                onChange = { e => this.setState({ password: e.target.value }) }\r\n                required /\r\n                >\r\n                <\r\n                button type = \"submit\" > Login < /button> <\r\n                hr / >\r\n                <\r\n                Link to = \"/users/register\" > Registrar Usuário < /Link> <\r\n                /Form> <\r\n                /Container>\r\n            );\r\n        }\r\n    }\r\n    export default withRouter(Login);"]},"metadata":{},"sourceType":"module"}