{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { customPropTypes } from '../../lib';\nimport getNodeRefFromProps from './lib/getNodeRefFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\nvar nodeRegistry = new NodeRegistry();\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MountNode, _Component);\n\n  function MountNode() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MountNode.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(_ref) {\n    var nextClassName = _ref.className;\n    var currentClassName = this.props.className;\n    return nextClassName !== currentClassName;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var nodeRef = getNodeRefFromProps(this.props);\n    nodeRegistry.add(nodeRef, this);\n    nodeRegistry.emit(nodeRef, handleClassNamesChange);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    nodeRegistry.emit(getNodeRefFromProps(this.props), handleClassNamesChange);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var nodeRef = getNodeRefFromProps(this.props);\n    nodeRegistry.del(nodeRef, this);\n    nodeRegistry.emit(nodeRef, handleClassNamesChange);\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return MountNode;\n}(Component);\n\nMountNode.handledProps = [\"className\", \"node\"];\nexport { MountNode as default };\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/node_modules/semantic-ui-react/dist/es/addons/MountNode/MountNode.js"],"names":["_inheritsLoose","PropTypes","Component","customPropTypes","getNodeRefFromProps","handleClassNamesChange","NodeRegistry","nodeRegistry","MountNode","_Component","apply","arguments","_proto","prototype","shouldComponentUpdate","_ref","nextClassName","className","currentClassName","props","componentDidMount","nodeRef","add","emit","componentDidUpdate","componentWillUnmount","del","render","handledProps","default","propTypes","process","env","NODE_ENV","string","node","oneOfType","domNode","refObject"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,sBAAP,MAAmC,8BAAnC;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,IAAIC,YAAY,GAAG,IAAID,YAAJ,EAAnB;AACA;;;;AAIA,IAAIE,SAAS,GAAG,aAAa,UAAUC,UAAV,EAAsB;AACjDT,EAAAA,cAAc,CAACQ,SAAD,EAAYC,UAAZ,CAAd;;AAEA,WAASD,SAAT,GAAqB;AACnB,WAAOC,UAAU,CAACC,KAAX,CAAiB,IAAjB,EAAuBC,SAAvB,KAAqC,IAA5C;AACD;;AAED,MAAIC,MAAM,GAAGJ,SAAS,CAACK,SAAvB;;AAEAD,EAAAA,MAAM,CAACE,qBAAP,GAA+B,SAASA,qBAAT,CAA+BC,IAA/B,EAAqC;AAClE,QAAIC,aAAa,GAAGD,IAAI,CAACE,SAAzB;AACA,QAAIC,gBAAgB,GAAG,KAAKC,KAAL,CAAWF,SAAlC;AACA,WAAOD,aAAa,KAAKE,gBAAzB;AACD,GAJD;;AAMAN,EAAAA,MAAM,CAACQ,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,QAAIC,OAAO,GAAGjB,mBAAmB,CAAC,KAAKe,KAAN,CAAjC;AACAZ,IAAAA,YAAY,CAACe,GAAb,CAAiBD,OAAjB,EAA0B,IAA1B;AACAd,IAAAA,YAAY,CAACgB,IAAb,CAAkBF,OAAlB,EAA2BhB,sBAA3B;AACD,GAJD;;AAMAO,EAAAA,MAAM,CAACY,kBAAP,GAA4B,SAASA,kBAAT,GAA8B;AACxDjB,IAAAA,YAAY,CAACgB,IAAb,CAAkBnB,mBAAmB,CAAC,KAAKe,KAAN,CAArC,EAAmDd,sBAAnD;AACD,GAFD;;AAIAO,EAAAA,MAAM,CAACa,oBAAP,GAA8B,SAASA,oBAAT,GAAgC;AAC5D,QAAIJ,OAAO,GAAGjB,mBAAmB,CAAC,KAAKe,KAAN,CAAjC;AACAZ,IAAAA,YAAY,CAACmB,GAAb,CAAiBL,OAAjB,EAA0B,IAA1B;AACAd,IAAAA,YAAY,CAACgB,IAAb,CAAkBF,OAAlB,EAA2BhB,sBAA3B;AACD,GAJD;;AAMAO,EAAAA,MAAM,CAACe,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,WAAO,IAAP;AACD,GAFD;;AAIA,SAAOnB,SAAP;AACD,CApC4B,CAoC3BN,SApC2B,CAA7B;;AAsCAM,SAAS,CAACoB,YAAV,GAAyB,CAAC,WAAD,EAAc,MAAd,CAAzB;AACA,SAASpB,SAAS,IAAIqB,OAAtB;AACArB,SAAS,CAACsB,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC5D;AACAhB,EAAAA,SAAS,EAAEhB,SAAS,CAACiC,MAFuC;;AAI5D;AACAC,EAAAA,IAAI,EAAElC,SAAS,CAACmC,SAAV,CAAoB,CAACjC,eAAe,CAACkC,OAAjB,EAA0BlC,eAAe,CAACmC,SAA1C,CAApB;AALsD,CAAxC,GAMlB,EANJ","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { customPropTypes } from '../../lib';\nimport getNodeRefFromProps from './lib/getNodeRefFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\nvar nodeRegistry = new NodeRegistry();\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MountNode, _Component);\n\n  function MountNode() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MountNode.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(_ref) {\n    var nextClassName = _ref.className;\n    var currentClassName = this.props.className;\n    return nextClassName !== currentClassName;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var nodeRef = getNodeRefFromProps(this.props);\n    nodeRegistry.add(nodeRef, this);\n    nodeRegistry.emit(nodeRef, handleClassNamesChange);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    nodeRegistry.emit(getNodeRefFromProps(this.props), handleClassNamesChange);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var nodeRef = getNodeRefFromProps(this.props);\n    nodeRegistry.del(nodeRef, this);\n    nodeRegistry.emit(nodeRef, handleClassNamesChange);\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return MountNode;\n}(Component);\n\nMountNode.handledProps = [\"className\", \"node\"];\nexport { MountNode as default };\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};"]},"metadata":{},"sourceType":"module"}