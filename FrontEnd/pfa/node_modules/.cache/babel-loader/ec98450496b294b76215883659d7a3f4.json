{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Portal\\\\PF\\\\EBK_PF_Adm\\\\FrontEnd\\\\pfa\\\\src\\\\components\\\\pages\\\\body\\\\mainFunction\\\\showConsumeTotal.js\";\nimport React, { Component } from \"react\";\nimport Menu from \"../../menu/menu\";\nimport Select from 'react-select';\nimport Data from \"../../../services/api\";\nimport Currency from 'react-currency-format';\nexport default class showConsumeTotal extends Component {\n  constructor() {\n    super();\n\n    this.loadYearMonth = async () => {\n      let ano = [];\n      let mes = []; // const { selectedYear, year } = this.state;\n\n      const resp_Y = await Data.get(`/ano`);\n      const resp_M = await Data.get(`/mes`);\n      ano = resp_Y.data.map(id_ano => {\n        return {\n          value: id_ano.id_ano,\n          label: id_ano.id_ano\n        };\n      });\n      mes = resp_M.data.map(id_mes => {\n        return {\n          value: id_mes.id_mes,\n          label: id_mes.mes\n        };\n      }); // console.log(\"Years\", ano);\n\n      this.setState({\n        year: ano,\n        month: mes\n      });\n    };\n\n    this.yearChange = selectedYear => {\n      this.setState({\n        selectedYear\n      }); // console.log(`Year Selected: `, selectedYear.value);\n    };\n\n    this.monthChange = selectedMonth => {\n      this.setState({\n        selectedMonth\n      }); // console.log(`Month Selected: `, selectedMonth.value);\n    };\n\n    this.handleSubmit = async e => {\n      const {\n        selectedYear,\n        selectedMonth\n      } = this.state;\n      const response = await Data.get(`/pmpg/total/${selectedYear.value}${selectedMonth.value}`);\n      console.log(response); // console.log(\"Pages\", response);\n\n      const {\n        docs\n      } = response.data;\n      this.setState({\n        content: docs\n      }); // console.log(response);\n    };\n\n    this.mask = (Value, Decimal, Prefix, TS) => {\n      const valor = /*#__PURE__*/React.createElement(Currency, {\n        displayType: 'text',\n        value: Value,\n        thousandSeparator: TS,\n        decimalSeparator: Decimal,\n        prefix: Prefix,\n        decimalScale: 2,\n        fixedDecimalScale: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }\n      });\n      return valor;\n    };\n\n    this.total = () => {\n      const total_geral = Data.docs.map(ttl => ttl.total_STFC).reduce((tt, next) => tt + next);\n      const total_ext = Data.docs.map(ttl => ttl.total).reduce((tt, next) => tt + next);\n      const total_llm = Data.docs.map(ttl => ttl.local_values + ttl.ldn_values + ttl.movel_values).reduce((tt, next) => tt + next);\n      const total_exc = Data.docs.map(ttl => ttl.local_values_exc + ttl.ldn_values_exc + ttl.movel_values_exc).reduce((tt, next) => tt + next);\n      const total_min = Data.docs.map(ttl => this.minutes(ttl.local_minutes_exc + ttl.ldn_minutes_exc + ttl.movel_minutes_exc)).reduce((tt, next) => tt + next);\n      this.setState({\n        total: total_geral,\n        total_ext: total_ext,\n        total_llm: total_llm,\n        total_exc: total_exc,\n        total_min: total_min\n      });\n    };\n\n    this.state = {\n      year: null,\n      month: null,\n      selectedYear: new Date().getFullYear(),\n      selectedMonth: parseInt(new Date().getMonth()) + 1\n    };\n  }\n\n  componentDidMount() {\n    this.loadYearMonth();\n    this.total();\n  }\n\n  render() {\n    const {\n      selectedYear,\n      selectedMonth,\n      year,\n      month\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Pesquisar Faturamento - Consumo Total\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"finders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedYear,\n      onChange: this.yearChange,\n      options: year,\n      placeholder: \"Selecione o Ano\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedMonth,\n      onChange: this.monthChange,\n      options: month,\n      placeholder: \"Selecione o M\\xEAs\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"findButton\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Pesquisar\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Total Geral\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"Total Servi\\xE7os:\", this.mask(total, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Total Ramais: \", this.mask(total_ext, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Total Franquias: \", this.mask(total_llm, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \"Total Excedentes: \", this.mask(total_exc, \",\", \"R$ \", \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Total Minutos: \", this.mask(this.minutes(total_min), \":\", \" \")))));\n  }\n\n}","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/src/components/pages/body/mainFunction/showConsumeTotal.js"],"names":["React","Component","Menu","Select","Data","Currency","showConsumeTotal","constructor","loadYearMonth","ano","mes","resp_Y","get","resp_M","data","map","id_ano","value","label","id_mes","setState","year","month","yearChange","selectedYear","monthChange","selectedMonth","handleSubmit","e","state","response","console","log","docs","content","mask","Value","Decimal","Prefix","TS","valor","total","total_geral","ttl","total_STFC","reduce","tt","next","total_ext","total_llm","local_values","ldn_values","movel_values","total_exc","local_values_exc","ldn_values_exc","movel_values_exc","total_min","minutes","local_minutes_exc","ldn_minutes_exc","movel_minutes_exc","Date","getFullYear","parseInt","getMonth","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Menu from \"../../menu/menu\";\r\nimport Select from 'react-select';\r\nimport Data from \"../../../services/api\";\r\nimport Currency from 'react-currency-format';\r\n\r\n\r\nexport default class showConsumeTotal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            year: null,\r\n            month: null,\r\n            selectedYear: new Date().getFullYear(),\r\n            selectedMonth: parseInt(new Date().getMonth()) + 1\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadYearMonth();\r\n        this.total();\r\n    }\r\n\r\n    loadYearMonth = async () => {\r\n        let ano = [];\r\n        let mes = [];\r\n        // const { selectedYear, year } = this.state;\r\n        const resp_Y = await Data.get(`/ano`);\r\n        const resp_M = await Data.get(`/mes`);\r\n        ano = resp_Y.data.map((id_ano) => { return { value: id_ano.id_ano, label: id_ano.id_ano } });\r\n        mes = resp_M.data.map((id_mes) => { return { value: id_mes.id_mes, label: id_mes.mes } });\r\n        // console.log(\"Years\", ano);\r\n        this.setState({ year: ano, month: mes });\r\n    }\r\n    // Year Selected\r\n    yearChange = selectedYear => {\r\n        this.setState({ selectedYear });\r\n        // console.log(`Year Selected: `, selectedYear.value);\r\n    };\r\n    // Month Selected\r\n    monthChange = selectedMonth => {\r\n        this.setState({ selectedMonth });\r\n        // console.log(`Month Selected: `, selectedMonth.value);\r\n    };\r\n\r\n    handleSubmit = async e => {\r\n        const { selectedYear, selectedMonth } = this.state;\r\n\r\n        const response = await Data.get(`/pmpg/total/${selectedYear.value}${selectedMonth.value}`);\r\n        console.log(response);\r\n        // console.log(\"Pages\", response);\r\n        const { docs } = response.data;\r\n        this.setState({ content: docs });\r\n        // console.log(response);\r\n    }\r\n\r\n    mask = (Value, Decimal, Prefix, TS) => {\r\n        const valor = (<Currency displayType={'text'}\r\n            value={Value}\r\n            thousandSeparator={TS}\r\n            decimalSeparator={Decimal}\r\n            prefix={Prefix}\r\n            decimalScale={2}\r\n            fixedDecimalScale={true} />)\r\n        return valor\r\n    }\r\n\r\n    total = () => {\r\n        const total_geral = (Data.docs.map((ttl) => (ttl.total_STFC)).reduce((tt, next) => (tt + next)))\r\n        const total_ext = (Data.docs.map((ttl) => (ttl.total)).reduce((tt, next) => (tt + next)))\r\n        const total_llm = (Data.docs.map((ttl) => (ttl.local_values\r\n            + ttl.ldn_values\r\n            + ttl.movel_values)).reduce((tt, next) => (tt + next)))\r\n        const total_exc = (Data.docs.map((ttl) => (ttl.local_values_exc\r\n            + ttl.ldn_values_exc\r\n            + ttl.movel_values_exc))).reduce((tt, next) => (tt + next))\r\n        const total_min = (Data.docs.map((ttl) => (this.minutes(ttl.local_minutes_exc\r\n            + ttl.ldn_minutes_exc\r\n            + ttl.movel_minutes_exc)\r\n        ))).reduce((tt, next) => (tt + next))\r\n        this.setState({\r\n            total: total_geral\r\n            , total_ext: total_ext\r\n            , total_llm: total_llm\r\n            , total_exc: total_exc\r\n            , total_min: total_min\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { selectedYear, selectedMonth, year, month } = this.state;\r\n        return (\r\n            <div className=\"mainDiv\">\r\n                <div className=\"menu\">\r\n                    <Menu />\r\n                </div>\r\n                <h1>Pesquisar Faturamento - Consumo Total</h1>\r\n                <div className=\"finders\">\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedYear}\r\n                        onChange={this.yearChange}\r\n                        options={year}\r\n                        placeholder=\"Selecione o Ano\"\r\n                        isSearchable />\r\n\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedMonth}\r\n                        onChange={this.monthChange}\r\n                        options={month}\r\n                        placeholder=\"Selecione o Mês\"\r\n                        isSearchable />\r\n                    <button className=\"findButton\" onClick={this.handleSubmit}>Pesquisar</button>\r\n                </div>\r\n                <div>\r\n                    <div className=\"total\">\r\n                        <h1>Total Geral</h1>\r\n                        <p>Total Serviços:{this.mask(total, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Ramais: {this.mask(total_ext, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Franquias: {this.mask(total_llm, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Excedentes: {this.mask(total_exc, \",\", \"R$ \", \".\")}</p>\r\n                        <p className=\"ttl\">Total Minutos: {this.mask(this.minutes(total_min), \":\", \" \")}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}