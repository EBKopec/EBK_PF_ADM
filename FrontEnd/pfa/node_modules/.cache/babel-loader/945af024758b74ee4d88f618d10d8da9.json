{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Portal\\\\PF\\\\EBK_PF_Adm\\\\FrontEnd\\\\pfa\\\\src\\\\components\\\\pages\\\\body\\\\searchExt\\\\searchExts.js\";\nimport React, { Component } from \"react\";\nimport Select from 'react-select';\nimport Menu from \"../../menu/menu\";\nimport Table from '../../../utils/table/table';\nimport Data from \"../../../services/api\";\nconst colunas = \"ATIVADOS_MES.DESCONECTADOS.EM_ATIVACAO.GRUPO.LINHA\";\nconst heads = [\"DATA_ATIVACAO\", \"DATA_DESCONEXAO\", \"DATA_CADASTRO_EM_ATIVACAO\", \"GRUPO\", \"LINHA\"];\nexport default class SearchExts extends Component {\n  constructor() {\n    super();\n\n    this.loadYearMonth = async () => {\n      let ano = [];\n      let mes = []; // const { selectedYear, year } = this.state;\n\n      const resp_Y = await Data.get(`/ano`);\n      const resp_M = await Data.get(`/mes`);\n      ano = resp_Y.data.map(id_ano => {\n        return {\n          value: id_ano.id_ano,\n          label: id_ano.id_ano\n        };\n      });\n      mes = resp_M.data.map(id_mes => {\n        return {\n          value: id_mes.id_mes,\n          label: id_mes.mes\n        };\n      }); // console.log(\"Years\", ano);\n\n      this.setState({\n        year: ano,\n        month: mes\n      });\n    };\n\n    this.handleSubmit = async () => {\n      const {\n        selectedYear,\n        selectedMonth\n      } = this.state;\n\n      try {\n        const YM = (this.state.selectedYear.value && this.state.selectedMonth.value) === undefined ? `${selectedYear}${selectedMonth}` : `${this.state.selectedYear.value}${this.state.selectedMonth.value}`;\n        const response = await Data.get(`/extensions/desc/${YM}`);\n        console.log(response);\n        const {\n          data,\n          ...contentInfo\n        } = response;\n        console.log(data);\n        this.setState({\n          content: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.showExts = () => {\n      const {\n        content,\n        page,\n        pages\n      } = this.state;\n      console.log('Content', content);\n      const showExts = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"groups\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        Header: heads,\n        data: content,\n        columns: colunas,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page <= 1,\n        onClick: this.firstPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Primeira P\\xE1gina\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page <= 1,\n        onClick: this.prevPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Anterior\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"P\\xE1gina \", page, \" de \", pages), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Insira a P\\xE1gina\",\n        name: \"page\",\n        ref: \"newPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.findPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \"Buscar\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page >= pages,\n        onClick: this.nextPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"Pr\\xF3ximo\"), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: page >= pages,\n        onClick: this.lastPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"\\xDAltima P\\xE1gina\")));\n      return showExts;\n    };\n\n    this.yearChange = selectedYear => {\n      this.setState({\n        selectedYear\n      });\n      console.log(`Year Selected: `, selectedYear.value);\n    };\n\n    this.monthChange = selectedMonth => {\n      this.setState({\n        selectedMonth\n      });\n      console.log(`Month Selected: `, selectedMonth.value);\n    };\n\n    this.prevPage = () => {\n      const {\n        page\n      } = this.state; //contentInfo\n\n      if (page <= 1) return;\n      const pageNumber = page - 1; // console.log(`Current Page: ${page}, Previous Page ${pageNumber}`)\n\n      this.loadContent(pageNumber);\n    };\n\n    this.nextPage = () => {\n      const {\n        page,\n        pages\n      } = this.state;\n      if (page >= pages) return;\n      const pageNumber = page + 1; // console.log(`Current Page: ${page}, Next Page: ${pageNumber}`);\n\n      this.loadContent(pageNumber);\n    };\n\n    this.firstPage = () => {\n      const {\n        page\n      } = this.state;\n      if (page <= 1) return;\n      const pageNumber = 1;\n      this.loadContent(pageNumber);\n    };\n\n    this.lastPage = () => {\n      const {\n        page,\n        pages\n      } = this.state; // console.log('Last Page:', pages);\n\n      if (page >= pages) return;\n      this.loadContent(pages);\n    };\n\n    this.findPage = () => {\n      const {\n        contentInfo\n      } = this.state;\n\n      if (this.refs.newPage.value < 1 || this.refs.newPage.value > contentInfo.Pages.Pages) {\n        alert('A página solicitada não existe. Favor corrigir sua busca.');\n        return;\n      }\n\n      const page = this.refs.newPage.value;\n      this.loadContent(parseInt(page));\n    };\n\n    this.loadYearMonth = async () => {\n      let ano = [];\n      let mes = []; // const { selectedYear, year } = this.state;\n\n      const resp_Y = await Data.get(`/ano`);\n      const resp_M = await Data.get(`/mes`);\n      ano = resp_Y.data.map(id_ano => {\n        return {\n          value: id_ano.id_ano,\n          label: id_ano.id_ano\n        };\n      });\n      mes = resp_M.data.map(id_mes => {\n        return {\n          value: id_mes.id_mes,\n          label: id_mes.mes\n        };\n      }); // console.log(\"Years\", ano);\n\n      this.setState({\n        year: ano,\n        month: mes\n      });\n    };\n\n    this.state = {\n      content: [],\n      contentInfo: {},\n      page: 1,\n      pages: 1,\n      year: null,\n      month: null,\n      selectedYear: new Date().getFullYear(),\n      selectedMonth: parseInt(new Date().getMonth()) + 1\n    };\n  }\n\n  componentDidMount() {\n    this.loadYearMonth();\n  }\n\n  render() {\n    const {\n      selectedYear,\n      selectedMonth,\n      year,\n      month\n    } = this.state; // console.log(\"Content\", content);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"Mostrar Ramais\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"finders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedYear,\n      onChange: this.yearChange,\n      options: year,\n      placeholder: \"Selecione o Ano\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      className: \"selected\",\n      value: selectedMonth,\n      onChange: this.monthChange,\n      options: month,\n      placeholder: \"Selecione o M\\xEAs\",\n      isSearchable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"findButton\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, \"Pesquisar\")), this.showExts());\n  }\n\n}","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/src/components/pages/body/searchExt/searchExts.js"],"names":["React","Component","Select","Menu","Table","Data","colunas","heads","SearchExts","constructor","loadYearMonth","ano","mes","resp_Y","get","resp_M","data","map","id_ano","value","label","id_mes","setState","year","month","handleSubmit","selectedYear","selectedMonth","state","YM","undefined","response","console","log","contentInfo","content","error","showExts","page","pages","firstPage","prevPage","findPage","nextPage","lastPage","yearChange","monthChange","pageNumber","loadContent","refs","newPage","Pages","alert","parseInt","Date","getFullYear","getMonth","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from 'react-select';\r\nimport Menu from \"../../menu/menu\";\r\nimport Table from '../../../utils/table/table';\r\nimport Data from \"../../../services/api\";\r\n\r\nconst colunas = \"ATIVADOS_MES.DESCONECTADOS.EM_ATIVACAO.GRUPO.LINHA\";\r\nconst heads = [\r\n    \"DATA_ATIVACAO\",\r\n    \"DATA_DESCONEXAO\",\r\n    \"DATA_CADASTRO_EM_ATIVACAO\",\r\n    \"GRUPO\",\r\n    \"LINHA\"\r\n]\r\n\r\nexport default class SearchExts extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            content: [],\r\n            contentInfo: {},\r\n            page: 1,\r\n            pages: 1,\r\n            year: null,\r\n            month: null,\r\n            selectedYear: new Date().getFullYear(),\r\n            selectedMonth: parseInt(new Date().getMonth()) + 1\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadYearMonth();\r\n    }\r\n\r\n    loadYearMonth = async () => {\r\n        let ano = [];\r\n        let mes = [];\r\n        // const { selectedYear, year } = this.state;\r\n        const resp_Y = await Data.get(`/ano`);\r\n        const resp_M = await Data.get(`/mes`);\r\n        ano = resp_Y.data.map((id_ano) => { return { value: id_ano.id_ano, label: id_ano.id_ano } });\r\n        mes = resp_M.data.map((id_mes) => { return { value: id_mes.id_mes, label: id_mes.mes } });\r\n        // console.log(\"Years\", ano);\r\n        this.setState({ year: ano, month: mes });\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const { selectedYear, selectedMonth } = this.state\r\n        try {\r\n            const YM = (this.state.selectedYear.value && this.state.selectedMonth.value) === undefined ? `${selectedYear}${selectedMonth}` : `${this.state.selectedYear.value}${this.state.selectedMonth.value}`\r\n            const response = await Data.get(`/extensions/desc/${YM}`);\r\n            console.log(response)\r\n            const { data, ...contentInfo } = response;\r\n            console.log(data);\r\n            this.setState({ content: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    showExts = () => {\r\n        const { content, page, pages } = this.state;\r\n        console.log('Content', content);\r\n        const showExts = (\r\n            <div className=\"groups\">\r\n                <div className=\"table\">\r\n                    <Table Header={heads} data={content} columns={colunas} />\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <button disabled={page <= 1} onClick={this.firstPage}>Primeira Página</button>\r\n                    <button disabled={page <= 1} onClick={this.prevPage}>Anterior</button>\r\n                    <button disabled={true}>Página {page} de {pages}</button>\r\n                    <input placeholder=\"Insira a Página\" name=\"page\" ref=\"newPage\" />\r\n                    <button onClick={this.findPage}>Buscar</button>\r\n                    <button disabled={page >= pages} onClick={this.nextPage}>Próximo</button>\r\n                    <button disabled={page >= pages} onClick={this.lastPage}>Última Página</button>\r\n                </div>\r\n            </div>\r\n        )\r\n        return showExts;\r\n    }\r\n\r\n\r\n    // Year Selected\r\n    yearChange = selectedYear => {\r\n        this.setState({ selectedYear });\r\n        console.log(`Year Selected: `, selectedYear.value);\r\n    };\r\n    // Month Selected\r\n    monthChange = selectedMonth => {\r\n        this.setState({ selectedMonth });\r\n        console.log(`Month Selected: `, selectedMonth.value);\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { page } = this.state;\r\n        //contentInfo\r\n        if (page <= 1) return;\r\n        const pageNumber = page - 1;\r\n        // console.log(`Current Page: ${page}, Previous Page ${pageNumber}`)\r\n        this.loadContent(pageNumber);\r\n\r\n    };\r\n    nextPage = () => {\r\n        const { page, pages } = this.state;\r\n        if (page >= pages) return;\r\n        const pageNumber = page + 1;\r\n        // console.log(`Current Page: ${page}, Next Page: ${pageNumber}`);\r\n        this.loadContent(pageNumber);\r\n    };\r\n\r\n    firstPage = () => {\r\n        const { page } = this.state;\r\n        if (page <= 1) return;\r\n        const pageNumber = 1;\r\n        this.loadContent(pageNumber);\r\n    }\r\n\r\n    lastPage = () => {\r\n        const { page, pages } = this.state;\r\n        // console.log('Last Page:', pages);\r\n        if (page >= pages) return;\r\n        this.loadContent(pages);\r\n    };\r\n\r\n    findPage = () => {\r\n        const { contentInfo } = this.state;\r\n        if ((this.refs.newPage.value < 1) || (this.refs.newPage.value > contentInfo.Pages.Pages)) {\r\n            alert('A página solicitada não existe. Favor corrigir sua busca.');\r\n            return;\r\n        }\r\n        const page = this.refs.newPage.value;\r\n        this.loadContent(parseInt(page));\r\n    };\r\n\r\n    loadYearMonth = async () => {\r\n        let ano = [];\r\n        let mes = [];\r\n        // const { selectedYear, year } = this.state;\r\n        const resp_Y = await Data.get(`/ano`);\r\n        const resp_M = await Data.get(`/mes`);\r\n        ano = resp_Y.data.map((id_ano) => { return { value: id_ano.id_ano, label: id_ano.id_ano } });\r\n        mes = resp_M.data.map((id_mes) => { return { value: id_mes.id_mes, label: id_mes.mes } });\r\n        // console.log(\"Years\", ano);\r\n        this.setState({ year: ano, month: mes });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedYear, selectedMonth, year, month } = this.state;\r\n        // console.log(\"Content\", content);\r\n        return (\r\n            <div className=\"mainDiv\">\r\n                <div className=\"menu\">\r\n                    <Menu />\r\n                </div>\r\n                <h1>Mostrar Ramais</h1>\r\n                <div className=\"finders\">\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedYear}\r\n                        onChange={this.yearChange}\r\n                        options={year}\r\n                        placeholder=\"Selecione o Ano\"\r\n                        isSearchable />\r\n\r\n                    <Select\r\n                        className=\"selected\"\r\n                        value={selectedMonth}\r\n                        onChange={this.monthChange}\r\n                        options={month}\r\n                        placeholder=\"Selecione o Mês\"\r\n                        isSearchable />\r\n                    <button className=\"findButton\" onClick={this.handleSubmit}>Pesquisar</button>\r\n                </div>\r\n\r\n                 {this.showExts()}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}