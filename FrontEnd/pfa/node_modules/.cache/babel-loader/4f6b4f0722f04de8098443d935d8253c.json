{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _pick from \"lodash/pick\";\nimport _includes from \"lodash/includes\";\nimport _reduce from \"lodash/reduce\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _invoke from \"lodash/invoke\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef, isValidElement } from 'react';\nimport shallowEqual from 'shallowequal';\nimport { ModernAutoControlledComponent as Component, childrenUtils, customPropTypes, doesNodeContainClick, eventStack, getElementType, getUnhandledProps, isBrowser, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MountNode from '../../addons/MountNode';\nimport Portal from '../../addons/Portal';\nimport ModalHeader from './ModalHeader';\nimport ModalContent from './ModalContent';\nimport ModalActions from './ModalActions';\nimport ModalDescription from './ModalDescription';\nimport { canFit, getLegacyStyles, isLegacy } from './utils';\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\n\nvar Modal = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Modal, _Component);\n\n  function Modal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.legacy = isBrowser() && isLegacy();\n    _this.ref = /*#__PURE__*/createRef();\n    _this.dimmerRef = /*#__PURE__*/createRef();\n    _this.latestDocumentMouseDownEvent = null;\n\n    _this.getMountNode = function () {\n      return isBrowser() ? _this.props.mountNode || document.body : null;\n    };\n\n    _this.handleActionsOverrides = function (predefinedProps) {\n      return {\n        onActionClick: function onActionClick(e, actionProps) {\n          _invoke(predefinedProps, 'onActionClick', e, actionProps);\n\n          _invoke(_this.props, 'onActionClick', e, _this.props);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleClose = function (e) {\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleDocumentMouseDown = function (e) {\n      _this.latestDocumentMouseDownEvent = e;\n    };\n\n    _this.handleDocumentClick = function (e) {\n      var closeOnDimmerClick = _this.props.closeOnDimmerClick;\n      var currentDocumentMouseDownEvent = _this.latestDocumentMouseDownEvent;\n      _this.latestDocumentMouseDownEvent = null;\n      if (!closeOnDimmerClick || doesNodeContainClick(_this.ref.current, currentDocumentMouseDownEvent) || doesNodeContainClick(_this.ref.current, e)) return;\n\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleIconOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          _invoke(predefinedProps, 'onClick', e);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleOpen = function (e) {\n      _invoke(_this.props, 'onOpen', e, _this.props);\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handlePortalMount = function (e) {\n      var eventPool = _this.props.eventPool;\n\n      _this.setState({\n        scrolling: false\n      });\n\n      _this.setPositionAndClassNames();\n\n      eventStack.sub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onMount', e, _this.props);\n    };\n\n    _this.handlePortalUnmount = function (e) {\n      var eventPool = _this.props.eventPool;\n      cancelAnimationFrame(_this.animationRequestId);\n      eventStack.unsub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onUnmount', e, _this.props);\n    };\n\n    _this.setDimmerNodeStyle = function () {\n      var current = _this.dimmerRef.current;\n\n      if (current && current.style && current.style.display !== 'flex') {\n        current.style.setProperty('display', 'flex', 'important');\n      }\n    };\n\n    _this.setPositionAndClassNames = function () {\n      var _this$props = _this.props,\n          centered = _this$props.centered,\n          dimmer = _this$props.dimmer;\n      var scrolling;\n      var newState = {};\n\n      if (_this.ref.current) {\n        var rect = _this.ref.current.getBoundingClientRect();\n\n        var isFitted = canFit(rect);\n        scrolling = !isFitted; // Styles should be computed for IE11\n\n        var legacyStyles = _this.legacy ? getLegacyStyles(isFitted, centered, rect) : {};\n\n        if (!shallowEqual(_this.state.legacyStyles, legacyStyles)) {\n          newState.legacyStyles = legacyStyles;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n        }\n      }\n\n      var classes = cx(useKeyOnly(dimmer, 'dimmable dimmed'), useKeyOnly(dimmer === 'blurring', ' blurring'), useKeyOnly(scrolling, ' scrolling'));\n      if (_this.state.mountClasses !== classes) newState.mountClasses = classes;\n      if (!_isEmpty(newState)) _this.setState(newState);\n      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);\n\n      _this.setDimmerNodeStyle();\n    };\n\n    _this.renderContent = function (rest) {\n      var _this$props2 = _this.props,\n          actions = _this$props2.actions,\n          basic = _this$props2.basic,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          closeIcon = _this$props2.closeIcon,\n          content = _this$props2.content,\n          header = _this$props2.header,\n          mountNode = _this$props2.mountNode,\n          size = _this$props2.size,\n          style = _this$props2.style;\n      var _this$state = _this.state,\n          legacyStyles = _this$state.legacyStyles,\n          mountClasses = _this$state.mountClasses,\n          scrolling = _this$state.scrolling;\n      var classes = cx('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(_this.legacy, 'legacy'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var ElementType = getElementType(Modal, _this.props);\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var closeIconJSX = Icon.create(closeIconName, {\n        overrideProps: _this.handleIconOverrides\n      });\n      return /*#__PURE__*/React.createElement(Ref, {\n        innerRef: _this.ref\n      }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        style: _extends({}, legacyStyles, style)\n      }), /*#__PURE__*/React.createElement(MountNode, {\n        className: mountClasses,\n        node: mountNode\n      }), closeIconJSX, childrenUtils.isNil(children) ? /*#__PURE__*/React.createElement(React.Fragment, null, ModalHeader.create(header, {\n        autoGenerateKey: false\n      }), ModalContent.create(content, {\n        autoGenerateKey: false\n      }), ModalActions.create(actions, {\n        overrideProps: _this.handleActionsOverrides\n      })) : children));\n    };\n\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.handlePortalUnmount();\n  } // Do not access document when server side rendering\n  ;\n\n  _proto.render = function render() {\n    var open = this.state.open;\n    var _this$props3 = this.props,\n        centered = _this$props3.centered,\n        closeOnDocumentClick = _this$props3.closeOnDocumentClick,\n        dimmer = _this$props3.dimmer,\n        eventPool = _this$props3.eventPool,\n        trigger = _this$props3.trigger;\n    var mountNode = this.getMountNode(); // Short circuit when server side rendering\n\n    if (!isBrowser()) {\n      return /*#__PURE__*/isValidElement(trigger) ? trigger : null;\n    }\n\n    var unhandled = getUnhandledProps(Modal, this.props);\n    var portalPropNames = Portal.handledProps;\n\n    var rest = _reduce(unhandled, function (acc, val, key) {\n      if (!_includes(portalPropNames, key)) acc[key] = val;\n      return acc;\n    }, {});\n\n    var portalProps = _pick(unhandled, portalPropNames); // wrap dimmer modals\n\n\n    var dimmerClasses = cx('ui', dimmer === 'inverted' && 'inverted', !centered && 'top aligned', 'page modals dimmer transition visible active'); // Heads up!\n    //\n    // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n    // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n    //\n    // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n    // We need the immediate child to be the dimmer to :not() blur the modal itself!\n    // Otherwise, the portal div is also blurred, blurring the modal.\n    //\n    // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n    return /*#__PURE__*/React.createElement(Portal, _extends({\n      closeOnDocumentClick: closeOnDocumentClick\n    }, portalProps, {\n      trigger: trigger,\n      eventPool: eventPool,\n      mountNode: mountNode,\n      open: open,\n      onClose: this.handleClose,\n      onMount: this.handlePortalMount,\n      onOpen: this.handleOpen,\n      onUnmount: this.handlePortalUnmount\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: dimmerClasses,\n      ref: this.dimmerRef\n    }, this.renderContent(rest)));\n  };\n\n  return Modal;\n}(Component);\n\nModal.handledProps = [\"actions\", \"as\", \"basic\", \"centered\", \"children\", \"className\", \"closeIcon\", \"closeOnDimmerClick\", \"closeOnDocumentClick\", \"content\", \"defaultOpen\", \"dimmer\", \"eventPool\", \"header\", \"mountNode\", \"onActionClick\", \"onClose\", \"onMount\", \"onOpen\", \"onUnmount\", \"open\", \"size\", \"style\", \"trigger\"];\nModal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */\n  actions: customPropTypes.itemShorthand,\n\n  /** A modal can reduce its complexity */\n  basic: PropTypes.bool,\n\n  /** A modal can be vertically centered in the viewport */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for the close icon. Closes the modal on click. */\n  closeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: PropTypes.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: PropTypes.bool,\n\n  /** Simple text content for the Modal. */\n  content: customPropTypes.itemShorthand,\n\n  /** Initial value of open. */\n  defaultOpen: PropTypes.bool,\n\n  /** A Modal can appear in a dimmer. */\n  dimmer: PropTypes.oneOf([true, 'inverted', 'blurring']),\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: PropTypes.string,\n\n  /** Modal displayed above the content in bold. */\n  header: customPropTypes.itemShorthand,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onActionClick: PropTypes.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: PropTypes.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: PropTypes.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: PropTypes.bool,\n\n  /** A modal can vary in size */\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen']),\n\n  /** Custom styles. */\n  style: PropTypes.object,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: PropTypes.node\n  /**\n   * NOTE: Any unhandled props that are defined in Portal are passed-through\n   * to the wrapping Portal.\n   */\n\n} : {};\nModal.defaultProps = {\n  centered: true,\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false,\n  eventPool: 'Modal'\n};\nModal.autoControlledProps = ['open'];\nModal.Header = ModalHeader;\nModal.Content = ModalContent;\nModal.Description = ModalDescription;\nModal.Actions = ModalActions;\nexport default Modal;","map":{"version":3,"sources":["E:/Projetos/Portal/PF/EBK_PF_Adm/FrontEnd/pfa/node_modules/semantic-ui-react/dist/es/modules/Modal/Modal.js"],"names":["_extends","_inheritsLoose","_pick","_includes","_reduce","_isEmpty","_invoke","Ref","cx","PropTypes","React","createRef","isValidElement","shallowEqual","ModernAutoControlledComponent","Component","childrenUtils","customPropTypes","doesNodeContainClick","eventStack","getElementType","getUnhandledProps","isBrowser","useKeyOnly","Icon","MountNode","Portal","ModalHeader","ModalContent","ModalActions","ModalDescription","canFit","getLegacyStyles","isLegacy","Modal","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","legacy","ref","dimmerRef","latestDocumentMouseDownEvent","getMountNode","props","mountNode","document","body","handleActionsOverrides","predefinedProps","onActionClick","e","actionProps","handleClose","setState","open","handleDocumentMouseDown","handleDocumentClick","closeOnDimmerClick","currentDocumentMouseDownEvent","current","handleIconOverrides","onClick","handleOpen","handlePortalMount","eventPool","scrolling","setPositionAndClassNames","sub","pool","target","handlePortalUnmount","cancelAnimationFrame","animationRequestId","unsub","setDimmerNodeStyle","style","display","setProperty","_this$props","centered","dimmer","newState","rect","getBoundingClientRect","isFitted","legacyStyles","state","classes","mountClasses","requestAnimationFrame","renderContent","rest","_this$props2","actions","basic","children","className","closeIcon","content","header","size","_this$state","ElementType","closeIconName","closeIconJSX","create","overrideProps","createElement","innerRef","node","isNil","Fragment","autoGenerateKey","_proto","prototype","componentWillUnmount","render","_this$props3","closeOnDocumentClick","trigger","unhandled","portalPropNames","handledProps","acc","val","key","portalProps","dimmerClasses","onClose","onMount","onOpen","onUnmount","propTypes","process","env","NODE_ENV","as","elementType","itemShorthand","bool","string","oneOfType","object","defaultOpen","oneOf","any","func","defaultProps","autoControlledProps","Header","Content","Description","Actions"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _pick from \"lodash/pick\";\nimport _includes from \"lodash/includes\";\nimport _reduce from \"lodash/reduce\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _invoke from \"lodash/invoke\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef, isValidElement } from 'react';\nimport shallowEqual from 'shallowequal';\nimport { ModernAutoControlledComponent as Component, childrenUtils, customPropTypes, doesNodeContainClick, eventStack, getElementType, getUnhandledProps, isBrowser, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MountNode from '../../addons/MountNode';\nimport Portal from '../../addons/Portal';\nimport ModalHeader from './ModalHeader';\nimport ModalContent from './ModalContent';\nimport ModalActions from './ModalActions';\nimport ModalDescription from './ModalDescription';\nimport { canFit, getLegacyStyles, isLegacy } from './utils';\n\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\nvar Modal = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Modal, _Component);\n\n  function Modal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.legacy = isBrowser() && isLegacy();\n    _this.ref = /*#__PURE__*/createRef();\n    _this.dimmerRef = /*#__PURE__*/createRef();\n    _this.latestDocumentMouseDownEvent = null;\n\n    _this.getMountNode = function () {\n      return isBrowser() ? _this.props.mountNode || document.body : null;\n    };\n\n    _this.handleActionsOverrides = function (predefinedProps) {\n      return {\n        onActionClick: function onActionClick(e, actionProps) {\n          _invoke(predefinedProps, 'onActionClick', e, actionProps);\n\n          _invoke(_this.props, 'onActionClick', e, _this.props);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleClose = function (e) {\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleDocumentMouseDown = function (e) {\n      _this.latestDocumentMouseDownEvent = e;\n    };\n\n    _this.handleDocumentClick = function (e) {\n      var closeOnDimmerClick = _this.props.closeOnDimmerClick;\n      var currentDocumentMouseDownEvent = _this.latestDocumentMouseDownEvent;\n      _this.latestDocumentMouseDownEvent = null;\n      if (!closeOnDimmerClick || doesNodeContainClick(_this.ref.current, currentDocumentMouseDownEvent) || doesNodeContainClick(_this.ref.current, e)) return;\n\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleIconOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          _invoke(predefinedProps, 'onClick', e);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleOpen = function (e) {\n      _invoke(_this.props, 'onOpen', e, _this.props);\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handlePortalMount = function (e) {\n      var eventPool = _this.props.eventPool;\n\n      _this.setState({\n        scrolling: false\n      });\n\n      _this.setPositionAndClassNames();\n\n      eventStack.sub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onMount', e, _this.props);\n    };\n\n    _this.handlePortalUnmount = function (e) {\n      var eventPool = _this.props.eventPool;\n      cancelAnimationFrame(_this.animationRequestId);\n      eventStack.unsub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onUnmount', e, _this.props);\n    };\n\n    _this.setDimmerNodeStyle = function () {\n      var current = _this.dimmerRef.current;\n\n      if (current && current.style && current.style.display !== 'flex') {\n        current.style.setProperty('display', 'flex', 'important');\n      }\n    };\n\n    _this.setPositionAndClassNames = function () {\n      var _this$props = _this.props,\n          centered = _this$props.centered,\n          dimmer = _this$props.dimmer;\n      var scrolling;\n      var newState = {};\n\n      if (_this.ref.current) {\n        var rect = _this.ref.current.getBoundingClientRect();\n\n        var isFitted = canFit(rect);\n        scrolling = !isFitted; // Styles should be computed for IE11\n\n        var legacyStyles = _this.legacy ? getLegacyStyles(isFitted, centered, rect) : {};\n\n        if (!shallowEqual(_this.state.legacyStyles, legacyStyles)) {\n          newState.legacyStyles = legacyStyles;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n        }\n      }\n\n      var classes = cx(useKeyOnly(dimmer, 'dimmable dimmed'), useKeyOnly(dimmer === 'blurring', ' blurring'), useKeyOnly(scrolling, ' scrolling'));\n      if (_this.state.mountClasses !== classes) newState.mountClasses = classes;\n      if (!_isEmpty(newState)) _this.setState(newState);\n      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);\n\n      _this.setDimmerNodeStyle();\n    };\n\n    _this.renderContent = function (rest) {\n      var _this$props2 = _this.props,\n          actions = _this$props2.actions,\n          basic = _this$props2.basic,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          closeIcon = _this$props2.closeIcon,\n          content = _this$props2.content,\n          header = _this$props2.header,\n          mountNode = _this$props2.mountNode,\n          size = _this$props2.size,\n          style = _this$props2.style;\n      var _this$state = _this.state,\n          legacyStyles = _this$state.legacyStyles,\n          mountClasses = _this$state.mountClasses,\n          scrolling = _this$state.scrolling;\n      var classes = cx('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(_this.legacy, 'legacy'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var ElementType = getElementType(Modal, _this.props);\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var closeIconJSX = Icon.create(closeIconName, {\n        overrideProps: _this.handleIconOverrides\n      });\n      return /*#__PURE__*/React.createElement(Ref, {\n        innerRef: _this.ref\n      }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        style: _extends({}, legacyStyles, style)\n      }), /*#__PURE__*/React.createElement(MountNode, {\n        className: mountClasses,\n        node: mountNode\n      }), closeIconJSX, childrenUtils.isNil(children) ? /*#__PURE__*/React.createElement(React.Fragment, null, ModalHeader.create(header, {\n        autoGenerateKey: false\n      }), ModalContent.create(content, {\n        autoGenerateKey: false\n      }), ModalActions.create(actions, {\n        overrideProps: _this.handleActionsOverrides\n      })) : children));\n    };\n\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.handlePortalUnmount();\n  } // Do not access document when server side rendering\n  ;\n\n  _proto.render = function render() {\n    var open = this.state.open;\n    var _this$props3 = this.props,\n        centered = _this$props3.centered,\n        closeOnDocumentClick = _this$props3.closeOnDocumentClick,\n        dimmer = _this$props3.dimmer,\n        eventPool = _this$props3.eventPool,\n        trigger = _this$props3.trigger;\n    var mountNode = this.getMountNode(); // Short circuit when server side rendering\n\n    if (!isBrowser()) {\n      return /*#__PURE__*/isValidElement(trigger) ? trigger : null;\n    }\n\n    var unhandled = getUnhandledProps(Modal, this.props);\n    var portalPropNames = Portal.handledProps;\n\n    var rest = _reduce(unhandled, function (acc, val, key) {\n      if (!_includes(portalPropNames, key)) acc[key] = val;\n      return acc;\n    }, {});\n\n    var portalProps = _pick(unhandled, portalPropNames); // wrap dimmer modals\n\n\n    var dimmerClasses = cx('ui', dimmer === 'inverted' && 'inverted', !centered && 'top aligned', 'page modals dimmer transition visible active'); // Heads up!\n    //\n    // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n    // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n    //\n    // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n    // We need the immediate child to be the dimmer to :not() blur the modal itself!\n    // Otherwise, the portal div is also blurred, blurring the modal.\n    //\n    // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n    return /*#__PURE__*/React.createElement(Portal, _extends({\n      closeOnDocumentClick: closeOnDocumentClick\n    }, portalProps, {\n      trigger: trigger,\n      eventPool: eventPool,\n      mountNode: mountNode,\n      open: open,\n      onClose: this.handleClose,\n      onMount: this.handlePortalMount,\n      onOpen: this.handleOpen,\n      onUnmount: this.handlePortalUnmount\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: dimmerClasses,\n      ref: this.dimmerRef\n    }, this.renderContent(rest)));\n  };\n\n  return Modal;\n}(Component);\n\nModal.handledProps = [\"actions\", \"as\", \"basic\", \"centered\", \"children\", \"className\", \"closeIcon\", \"closeOnDimmerClick\", \"closeOnDocumentClick\", \"content\", \"defaultOpen\", \"dimmer\", \"eventPool\", \"header\", \"mountNode\", \"onActionClick\", \"onClose\", \"onMount\", \"onOpen\", \"onUnmount\", \"open\", \"size\", \"style\", \"trigger\"];\nModal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */\n  actions: customPropTypes.itemShorthand,\n\n  /** A modal can reduce its complexity */\n  basic: PropTypes.bool,\n\n  /** A modal can be vertically centered in the viewport */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for the close icon. Closes the modal on click. */\n  closeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: PropTypes.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: PropTypes.bool,\n\n  /** Simple text content for the Modal. */\n  content: customPropTypes.itemShorthand,\n\n  /** Initial value of open. */\n  defaultOpen: PropTypes.bool,\n\n  /** A Modal can appear in a dimmer. */\n  dimmer: PropTypes.oneOf([true, 'inverted', 'blurring']),\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: PropTypes.string,\n\n  /** Modal displayed above the content in bold. */\n  header: customPropTypes.itemShorthand,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onActionClick: PropTypes.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: PropTypes.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: PropTypes.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: PropTypes.bool,\n\n  /** A modal can vary in size */\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen']),\n\n  /** Custom styles. */\n  style: PropTypes.object,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: PropTypes.node\n  /**\n   * NOTE: Any unhandled props that are defined in Portal are passed-through\n   * to the wrapping Portal.\n   */\n\n} : {};\nModal.defaultProps = {\n  centered: true,\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false,\n  eventPool: 'Modal'\n};\nModal.autoControlledProps = ['open'];\nModal.Header = ModalHeader;\nModal.Content = ModalContent;\nModal.Description = ModalDescription;\nModal.Actions = ModalActions;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}